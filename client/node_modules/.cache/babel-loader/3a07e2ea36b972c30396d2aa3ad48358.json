{"ast":null,"code":"import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.array.filter\";\nimport \"core-js/modules/es.array.join\";\nimport \"core-js/modules/es.array.map\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Markdown from 'rsg-components/Markdown';\nimport map from 'lodash/map';\n\nvar plural = function plural(array, caption) {\n  return array.length === 1 ? caption : caption + \"s\";\n};\n\nvar list = function list(array) {\n  return array.map(function (item) {\n    return item.description;\n  }).join(', ');\n};\n\nvar paragraphs = function paragraphs(array) {\n  return array.map(function (item) {\n    return item.description;\n  }).join('\\n\\n');\n};\n\nvar fields = {\n  deprecated: function deprecated(value) {\n    return \"**Deprecated:** \" + value[0].description;\n  },\n  see: function see(value) {\n    return paragraphs(value);\n  },\n  link: function link(value) {\n    return paragraphs(value);\n  },\n  author: function author(value) {\n    return plural(value, 'Author') + \": \" + list(value);\n  },\n  version: function version(value) {\n    return \"Version: \" + value[0].description;\n  },\n  since: function since(value) {\n    return \"Since: \" + value[0].description;\n  }\n};\nexport function getMarkdown(props) {\n  return map(fields, function (format, field) {\n    return props[field] && format(props[field]);\n  }).filter(Boolean).join('\\n\\n');\n}\nexport default function JsDoc(props) {\n  var markdown = getMarkdown(props);\n  return markdown ? React.createElement(Markdown, {\n    text: markdown\n  }) : null;\n}\nJsDoc.propTypes = {\n  deprecated: PropTypes.array,\n  see: PropTypes.array,\n  link: PropTypes.array,\n  author: PropTypes.array,\n  version: PropTypes.array,\n  since: PropTypes.array\n};","map":null,"metadata":{},"sourceType":"module"}