{"ast":null,"code":"// Contains the interpretation of CSS properties, as used by the property optimizer\nvar breakUp = require('./break-up');\n\nvar canOverride = require('./can-override');\n\nvar restore = require('./restore');\n\nvar override = require('../../utils/override'); // Properties to process\n// Extend this object in order to add support for more properties in the optimizer.\n//\n// Each key in this object represents a CSS property and should be an object.\n// Such an object contains properties that describe how the represented CSS property should be handled.\n// Possible options:\n//\n// * components: array (Only specify for shorthand properties.)\n//   Contains the names of the granular properties this shorthand compacts.\n//\n// * canOverride: function\n//   Returns whether two tokens of this property can be merged with each other.\n//   This property has no meaning for shorthands.\n//\n// * defaultValue: string\n//   Specifies the default value of the property according to the CSS standard.\n//   For shorthand, this is used when every component is set to its default value, therefore it should be the shortest possible default value of all the components.\n//\n// * shortestValue: string\n//   Specifies the shortest possible value the property can possibly have.\n//   (Falls back to defaultValue if unspecified.)\n//\n// * breakUp: function (Only specify for shorthand properties.)\n//   Breaks the shorthand up to its components.\n//\n// * restore: function (Only specify for shorthand properties.)\n//   Puts the shorthand together from its components.\n//\n\n\nvar compactable = {\n  'animation': {\n    canOverride: canOverride.generic.components([canOverride.generic.time, canOverride.generic.timingFunction, canOverride.generic.time, canOverride.property.animationIterationCount, canOverride.property.animationDirection, canOverride.property.animationFillMode, canOverride.property.animationPlayState, canOverride.property.animationName]),\n    components: ['animation-duration', 'animation-timing-function', 'animation-delay', 'animation-iteration-count', 'animation-direction', 'animation-fill-mode', 'animation-play-state', 'animation-name'],\n    breakUp: breakUp.multiplex(breakUp.animation),\n    defaultValue: 'none',\n    restore: restore.multiplex(restore.withoutDefaults),\n    shorthand: true,\n    vendorPrefixes: ['-moz-', '-o-', '-webkit-']\n  },\n  'animation-delay': {\n    canOverride: canOverride.generic.time,\n    componentOf: ['animation'],\n    defaultValue: '0s',\n    intoMultiplexMode: 'real',\n    vendorPrefixes: ['-moz-', '-o-', '-webkit-']\n  },\n  'animation-direction': {\n    canOverride: canOverride.property.animationDirection,\n    componentOf: ['animation'],\n    defaultValue: 'normal',\n    intoMultiplexMode: 'real',\n    vendorPrefixes: ['-moz-', '-o-', '-webkit-']\n  },\n  'animation-duration': {\n    canOverride: canOverride.generic.time,\n    componentOf: ['animation'],\n    defaultValue: '0s',\n    intoMultiplexMode: 'real',\n    keepUnlessDefault: 'animation-delay',\n    vendorPrefixes: ['-moz-', '-o-', '-webkit-']\n  },\n  'animation-fill-mode': {\n    canOverride: canOverride.property.animationFillMode,\n    componentOf: ['animation'],\n    defaultValue: 'none',\n    intoMultiplexMode: 'real',\n    vendorPrefixes: ['-moz-', '-o-', '-webkit-']\n  },\n  'animation-iteration-count': {\n    canOverride: canOverride.property.animationIterationCount,\n    componentOf: ['animation'],\n    defaultValue: '1',\n    intoMultiplexMode: 'real',\n    vendorPrefixes: ['-moz-', '-o-', '-webkit-']\n  },\n  'animation-name': {\n    canOverride: canOverride.property.animationName,\n    componentOf: ['animation'],\n    defaultValue: 'none',\n    intoMultiplexMode: 'real',\n    vendorPrefixes: ['-moz-', '-o-', '-webkit-']\n  },\n  'animation-play-state': {\n    canOverride: canOverride.property.animationPlayState,\n    componentOf: ['animation'],\n    defaultValue: 'running',\n    intoMultiplexMode: 'real',\n    vendorPrefixes: ['-moz-', '-o-', '-webkit-']\n  },\n  'animation-timing-function': {\n    canOverride: canOverride.generic.timingFunction,\n    componentOf: ['animation'],\n    defaultValue: 'ease',\n    intoMultiplexMode: 'real',\n    vendorPrefixes: ['-moz-', '-o-', '-webkit-']\n  },\n  'background': {\n    canOverride: canOverride.generic.components([canOverride.generic.image, canOverride.property.backgroundPosition, canOverride.property.backgroundSize, canOverride.property.backgroundRepeat, canOverride.property.backgroundAttachment, canOverride.property.backgroundOrigin, canOverride.property.backgroundClip, canOverride.generic.color]),\n    components: ['background-image', 'background-position', 'background-size', 'background-repeat', 'background-attachment', 'background-origin', 'background-clip', 'background-color'],\n    breakUp: breakUp.multiplex(breakUp.background),\n    defaultValue: '0 0',\n    restore: restore.multiplex(restore.background),\n    shortestValue: '0',\n    shorthand: true\n  },\n  'background-attachment': {\n    canOverride: canOverride.property.backgroundAttachment,\n    componentOf: ['background'],\n    defaultValue: 'scroll',\n    intoMultiplexMode: 'real'\n  },\n  'background-clip': {\n    canOverride: canOverride.property.backgroundClip,\n    componentOf: ['background'],\n    defaultValue: 'border-box',\n    intoMultiplexMode: 'real',\n    shortestValue: 'border-box'\n  },\n  'background-color': {\n    canOverride: canOverride.generic.color,\n    componentOf: ['background'],\n    defaultValue: 'transparent',\n    intoMultiplexMode: 'real',\n    // otherwise real color will turn into default since color appears in last multiplex only\n    multiplexLastOnly: true,\n    nonMergeableValue: 'none',\n    shortestValue: 'red'\n  },\n  'background-image': {\n    canOverride: canOverride.generic.image,\n    componentOf: ['background'],\n    defaultValue: 'none',\n    intoMultiplexMode: 'default'\n  },\n  'background-origin': {\n    canOverride: canOverride.property.backgroundOrigin,\n    componentOf: ['background'],\n    defaultValue: 'padding-box',\n    intoMultiplexMode: 'real',\n    shortestValue: 'border-box'\n  },\n  'background-position': {\n    canOverride: canOverride.property.backgroundPosition,\n    componentOf: ['background'],\n    defaultValue: ['0', '0'],\n    doubleValues: true,\n    intoMultiplexMode: 'real',\n    shortestValue: '0'\n  },\n  'background-repeat': {\n    canOverride: canOverride.property.backgroundRepeat,\n    componentOf: ['background'],\n    defaultValue: ['repeat'],\n    doubleValues: true,\n    intoMultiplexMode: 'real'\n  },\n  'background-size': {\n    canOverride: canOverride.property.backgroundSize,\n    componentOf: ['background'],\n    defaultValue: ['auto'],\n    doubleValues: true,\n    intoMultiplexMode: 'real',\n    shortestValue: '0 0'\n  },\n  'bottom': {\n    canOverride: canOverride.property.bottom,\n    defaultValue: 'auto'\n  },\n  'border': {\n    breakUp: breakUp.border,\n    canOverride: canOverride.generic.components([canOverride.generic.unit, canOverride.property.borderStyle, canOverride.generic.color]),\n    components: ['border-width', 'border-style', 'border-color'],\n    defaultValue: 'none',\n    overridesShorthands: ['border-bottom', 'border-left', 'border-right', 'border-top'],\n    restore: restore.withoutDefaults,\n    shorthand: true,\n    shorthandComponents: true\n  },\n  'border-bottom': {\n    breakUp: breakUp.border,\n    canOverride: canOverride.generic.components([canOverride.generic.unit, canOverride.property.borderStyle, canOverride.generic.color]),\n    components: ['border-bottom-width', 'border-bottom-style', 'border-bottom-color'],\n    defaultValue: 'none',\n    restore: restore.withoutDefaults,\n    shorthand: true\n  },\n  'border-bottom-color': {\n    canOverride: canOverride.generic.color,\n    componentOf: ['border-bottom', 'border-color'],\n    defaultValue: 'none'\n  },\n  'border-bottom-left-radius': {\n    canOverride: canOverride.generic.unit,\n    componentOf: ['border-radius'],\n    defaultValue: '0',\n    vendorPrefixes: ['-moz-', '-o-']\n  },\n  'border-bottom-right-radius': {\n    canOverride: canOverride.generic.unit,\n    componentOf: ['border-radius'],\n    defaultValue: '0',\n    vendorPrefixes: ['-moz-', '-o-']\n  },\n  'border-bottom-style': {\n    canOverride: canOverride.property.borderStyle,\n    componentOf: ['border-bottom', 'border-style'],\n    defaultValue: 'none'\n  },\n  'border-bottom-width': {\n    canOverride: canOverride.generic.unit,\n    componentOf: ['border-bottom', 'border-width'],\n    defaultValue: 'medium',\n    oppositeTo: 'border-top-width',\n    shortestValue: '0'\n  },\n  'border-collapse': {\n    canOverride: canOverride.property.borderCollapse,\n    defaultValue: 'separate'\n  },\n  'border-color': {\n    breakUp: breakUp.fourValues,\n    canOverride: canOverride.generic.components([canOverride.generic.color, canOverride.generic.color, canOverride.generic.color, canOverride.generic.color]),\n    componentOf: ['border'],\n    components: ['border-top-color', 'border-right-color', 'border-bottom-color', 'border-left-color'],\n    defaultValue: 'none',\n    restore: restore.fourValues,\n    shortestValue: 'red',\n    shorthand: true\n  },\n  'border-left': {\n    breakUp: breakUp.border,\n    canOverride: canOverride.generic.components([canOverride.generic.unit, canOverride.property.borderStyle, canOverride.generic.color]),\n    components: ['border-left-width', 'border-left-style', 'border-left-color'],\n    defaultValue: 'none',\n    restore: restore.withoutDefaults,\n    shorthand: true\n  },\n  'border-left-color': {\n    canOverride: canOverride.generic.color,\n    componentOf: ['border-color', 'border-left'],\n    defaultValue: 'none'\n  },\n  'border-left-style': {\n    canOverride: canOverride.property.borderStyle,\n    componentOf: ['border-left', 'border-style'],\n    defaultValue: 'none'\n  },\n  'border-left-width': {\n    canOverride: canOverride.generic.unit,\n    componentOf: ['border-left', 'border-width'],\n    defaultValue: 'medium',\n    oppositeTo: 'border-right-width',\n    shortestValue: '0'\n  },\n  'border-radius': {\n    breakUp: breakUp.borderRadius,\n    canOverride: canOverride.generic.components([canOverride.generic.unit, canOverride.generic.unit, canOverride.generic.unit, canOverride.generic.unit]),\n    components: ['border-top-left-radius', 'border-top-right-radius', 'border-bottom-right-radius', 'border-bottom-left-radius'],\n    defaultValue: '0',\n    restore: restore.borderRadius,\n    shorthand: true,\n    vendorPrefixes: ['-moz-', '-o-']\n  },\n  'border-right': {\n    breakUp: breakUp.border,\n    canOverride: canOverride.generic.components([canOverride.generic.unit, canOverride.property.borderStyle, canOverride.generic.color]),\n    components: ['border-right-width', 'border-right-style', 'border-right-color'],\n    defaultValue: 'none',\n    restore: restore.withoutDefaults,\n    shorthand: true\n  },\n  'border-right-color': {\n    canOverride: canOverride.generic.color,\n    componentOf: ['border-color', 'border-right'],\n    defaultValue: 'none'\n  },\n  'border-right-style': {\n    canOverride: canOverride.property.borderStyle,\n    componentOf: ['border-right', 'border-style'],\n    defaultValue: 'none'\n  },\n  'border-right-width': {\n    canOverride: canOverride.generic.unit,\n    componentOf: ['border-right', 'border-width'],\n    defaultValue: 'medium',\n    oppositeTo: 'border-left-width',\n    shortestValue: '0'\n  },\n  'border-style': {\n    breakUp: breakUp.fourValues,\n    canOverride: canOverride.generic.components([canOverride.property.borderStyle, canOverride.property.borderStyle, canOverride.property.borderStyle, canOverride.property.borderStyle]),\n    componentOf: ['border'],\n    components: ['border-top-style', 'border-right-style', 'border-bottom-style', 'border-left-style'],\n    defaultValue: 'none',\n    restore: restore.fourValues,\n    shorthand: true\n  },\n  'border-top': {\n    breakUp: breakUp.border,\n    canOverride: canOverride.generic.components([canOverride.generic.unit, canOverride.property.borderStyle, canOverride.generic.color]),\n    components: ['border-top-width', 'border-top-style', 'border-top-color'],\n    defaultValue: 'none',\n    restore: restore.withoutDefaults,\n    shorthand: true\n  },\n  'border-top-color': {\n    canOverride: canOverride.generic.color,\n    componentOf: ['border-color', 'border-top'],\n    defaultValue: 'none'\n  },\n  'border-top-left-radius': {\n    canOverride: canOverride.generic.unit,\n    componentOf: ['border-radius'],\n    defaultValue: '0',\n    vendorPrefixes: ['-moz-', '-o-']\n  },\n  'border-top-right-radius': {\n    canOverride: canOverride.generic.unit,\n    componentOf: ['border-radius'],\n    defaultValue: '0',\n    vendorPrefixes: ['-moz-', '-o-']\n  },\n  'border-top-style': {\n    canOverride: canOverride.property.borderStyle,\n    componentOf: ['border-style', 'border-top'],\n    defaultValue: 'none'\n  },\n  'border-top-width': {\n    canOverride: canOverride.generic.unit,\n    componentOf: ['border-top', 'border-width'],\n    defaultValue: 'medium',\n    oppositeTo: 'border-bottom-width',\n    shortestValue: '0'\n  },\n  'border-width': {\n    breakUp: breakUp.fourValues,\n    canOverride: canOverride.generic.components([canOverride.generic.unit, canOverride.generic.unit, canOverride.generic.unit, canOverride.generic.unit]),\n    componentOf: ['border'],\n    components: ['border-top-width', 'border-right-width', 'border-bottom-width', 'border-left-width'],\n    defaultValue: 'medium',\n    restore: restore.fourValues,\n    shortestValue: '0',\n    shorthand: true\n  },\n  'clear': {\n    canOverride: canOverride.property.clear,\n    defaultValue: 'none'\n  },\n  'color': {\n    canOverride: canOverride.generic.color,\n    defaultValue: 'transparent',\n    shortestValue: 'red'\n  },\n  'cursor': {\n    canOverride: canOverride.property.cursor,\n    defaultValue: 'auto'\n  },\n  'display': {\n    canOverride: canOverride.property.display\n  },\n  'float': {\n    canOverride: canOverride.property.float,\n    defaultValue: 'none'\n  },\n  'font': {\n    breakUp: breakUp.font,\n    canOverride: canOverride.generic.components([canOverride.property.fontStyle, canOverride.property.fontVariant, canOverride.property.fontWeight, canOverride.property.fontStretch, canOverride.generic.unit, canOverride.generic.unit, canOverride.property.fontFamily]),\n    components: ['font-style', 'font-variant', 'font-weight', 'font-stretch', 'font-size', 'line-height', 'font-family'],\n    restore: restore.font,\n    shorthand: true\n  },\n  'font-family': {\n    canOverride: canOverride.property.fontFamily,\n    defaultValue: 'user|agent|specific'\n  },\n  'font-size': {\n    canOverride: canOverride.generic.unit,\n    defaultValue: 'medium',\n    shortestValue: '0'\n  },\n  'font-stretch': {\n    canOverride: canOverride.property.fontStretch,\n    defaultValue: 'normal'\n  },\n  'font-style': {\n    canOverride: canOverride.property.fontStyle,\n    defaultValue: 'normal'\n  },\n  'font-variant': {\n    canOverride: canOverride.property.fontVariant,\n    defaultValue: 'normal'\n  },\n  'font-weight': {\n    canOverride: canOverride.property.fontWeight,\n    defaultValue: 'normal',\n    shortestValue: '400'\n  },\n  'height': {\n    canOverride: canOverride.generic.unit,\n    defaultValue: 'auto',\n    shortestValue: '0'\n  },\n  'left': {\n    canOverride: canOverride.property.left,\n    defaultValue: 'auto'\n  },\n  'line-height': {\n    canOverride: canOverride.generic.unitOrNumber,\n    defaultValue: 'normal',\n    shortestValue: '0'\n  },\n  'list-style': {\n    canOverride: canOverride.generic.components([canOverride.property.listStyleType, canOverride.property.listStylePosition, canOverride.property.listStyleImage]),\n    components: ['list-style-type', 'list-style-position', 'list-style-image'],\n    breakUp: breakUp.listStyle,\n    restore: restore.withoutDefaults,\n    defaultValue: 'outside',\n    // can't use 'disc' because that'd override default 'decimal' for <ol>\n    shortestValue: 'none',\n    shorthand: true\n  },\n  'list-style-image': {\n    canOverride: canOverride.generic.image,\n    componentOf: ['list-style'],\n    defaultValue: 'none'\n  },\n  'list-style-position': {\n    canOverride: canOverride.property.listStylePosition,\n    componentOf: ['list-style'],\n    defaultValue: 'outside',\n    shortestValue: 'inside'\n  },\n  'list-style-type': {\n    canOverride: canOverride.property.listStyleType,\n    componentOf: ['list-style'],\n    // NOTE: we can't tell the real default value here, it's 'disc' for <ul> and 'decimal' for <ol>\n    // this is a hack, but it doesn't matter because this value will be either overridden or\n    // it will disappear at the final step anyway\n    defaultValue: 'decimal|disc',\n    shortestValue: 'none'\n  },\n  'margin': {\n    breakUp: breakUp.fourValues,\n    canOverride: canOverride.generic.components([canOverride.generic.unit, canOverride.generic.unit, canOverride.generic.unit, canOverride.generic.unit]),\n    components: ['margin-top', 'margin-right', 'margin-bottom', 'margin-left'],\n    defaultValue: '0',\n    restore: restore.fourValues,\n    shorthand: true\n  },\n  'margin-bottom': {\n    canOverride: canOverride.generic.unit,\n    componentOf: ['margin'],\n    defaultValue: '0',\n    oppositeTo: 'margin-top'\n  },\n  'margin-left': {\n    canOverride: canOverride.generic.unit,\n    componentOf: ['margin'],\n    defaultValue: '0',\n    oppositeTo: 'margin-right'\n  },\n  'margin-right': {\n    canOverride: canOverride.generic.unit,\n    componentOf: ['margin'],\n    defaultValue: '0',\n    oppositeTo: 'margin-left'\n  },\n  'margin-top': {\n    canOverride: canOverride.generic.unit,\n    componentOf: ['margin'],\n    defaultValue: '0',\n    oppositeTo: 'margin-bottom'\n  },\n  'outline': {\n    canOverride: canOverride.generic.components([canOverride.generic.color, canOverride.property.outlineStyle, canOverride.generic.unit]),\n    components: ['outline-color', 'outline-style', 'outline-width'],\n    breakUp: breakUp.outline,\n    restore: restore.withoutDefaults,\n    defaultValue: '0',\n    shorthand: true\n  },\n  'outline-color': {\n    canOverride: canOverride.generic.color,\n    componentOf: ['outline'],\n    defaultValue: 'invert',\n    shortestValue: 'red'\n  },\n  'outline-style': {\n    canOverride: canOverride.property.outlineStyle,\n    componentOf: ['outline'],\n    defaultValue: 'none'\n  },\n  'outline-width': {\n    canOverride: canOverride.generic.unit,\n    componentOf: ['outline'],\n    defaultValue: 'medium',\n    shortestValue: '0'\n  },\n  'overflow': {\n    canOverride: canOverride.property.overflow,\n    defaultValue: 'visible'\n  },\n  'overflow-x': {\n    canOverride: canOverride.property.overflow,\n    defaultValue: 'visible'\n  },\n  'overflow-y': {\n    canOverride: canOverride.property.overflow,\n    defaultValue: 'visible'\n  },\n  'padding': {\n    breakUp: breakUp.fourValues,\n    canOverride: canOverride.generic.components([canOverride.generic.unit, canOverride.generic.unit, canOverride.generic.unit, canOverride.generic.unit]),\n    components: ['padding-top', 'padding-right', 'padding-bottom', 'padding-left'],\n    defaultValue: '0',\n    restore: restore.fourValues,\n    shorthand: true\n  },\n  'padding-bottom': {\n    canOverride: canOverride.generic.unit,\n    componentOf: ['padding'],\n    defaultValue: '0',\n    oppositeTo: 'padding-top'\n  },\n  'padding-left': {\n    canOverride: canOverride.generic.unit,\n    componentOf: ['padding'],\n    defaultValue: '0',\n    oppositeTo: 'padding-right'\n  },\n  'padding-right': {\n    canOverride: canOverride.generic.unit,\n    componentOf: ['padding'],\n    defaultValue: '0',\n    oppositeTo: 'padding-left'\n  },\n  'padding-top': {\n    canOverride: canOverride.generic.unit,\n    componentOf: ['padding'],\n    defaultValue: '0',\n    oppositeTo: 'padding-bottom'\n  },\n  'position': {\n    canOverride: canOverride.property.position,\n    defaultValue: 'static'\n  },\n  'right': {\n    canOverride: canOverride.property.right,\n    defaultValue: 'auto'\n  },\n  'text-align': {\n    canOverride: canOverride.property.textAlign,\n    // NOTE: we can't tell the real default value here, as it depends on default text direction\n    // this is a hack, but it doesn't matter because this value will be either overridden or\n    // it will disappear anyway\n    defaultValue: 'left|right'\n  },\n  'text-decoration': {\n    canOverride: canOverride.property.textDecoration,\n    defaultValue: 'none'\n  },\n  'text-overflow': {\n    canOverride: canOverride.property.textOverflow,\n    defaultValue: 'none'\n  },\n  'text-shadow': {\n    canOverride: canOverride.property.textShadow,\n    defaultValue: 'none'\n  },\n  'top': {\n    canOverride: canOverride.property.top,\n    defaultValue: 'auto'\n  },\n  'transform': {\n    canOverride: canOverride.property.transform,\n    vendorPrefixes: ['-moz-', '-ms-', '-webkit-']\n  },\n  'transition': {\n    breakUp: breakUp.multiplex(breakUp.transition),\n    canOverride: canOverride.generic.components([canOverride.property.transitionProperty, canOverride.generic.time, canOverride.generic.timingFunction, canOverride.generic.time]),\n    components: ['transition-property', 'transition-duration', 'transition-timing-function', 'transition-delay'],\n    defaultValue: 'none',\n    restore: restore.multiplex(restore.withoutDefaults),\n    shorthand: true,\n    vendorPrefixes: ['-moz-', '-o-', '-webkit-']\n  },\n  'transition-delay': {\n    canOverride: canOverride.generic.time,\n    componentOf: ['transition'],\n    defaultValue: '0s',\n    intoMultiplexMode: 'real',\n    vendorPrefixes: ['-moz-', '-o-', '-webkit-']\n  },\n  'transition-duration': {\n    canOverride: canOverride.generic.time,\n    componentOf: ['transition'],\n    defaultValue: '0s',\n    intoMultiplexMode: 'real',\n    vendorPrefixes: ['-moz-', '-o-', '-webkit-']\n  },\n  'transition-property': {\n    canOverride: canOverride.generic.propertyName,\n    componentOf: ['transition'],\n    defaultValue: 'all',\n    intoMultiplexMode: 'placeholder',\n    placeholderValue: '_',\n    // it's a short value that won't match any property and still be a valid `transition-property`\n    vendorPrefixes: ['-moz-', '-o-', '-webkit-']\n  },\n  'transition-timing-function': {\n    canOverride: canOverride.generic.timingFunction,\n    componentOf: ['transition'],\n    defaultValue: 'ease',\n    intoMultiplexMode: 'real',\n    vendorPrefixes: ['-moz-', '-o-', '-webkit-']\n  },\n  'vertical-align': {\n    canOverride: canOverride.property.verticalAlign,\n    defaultValue: 'baseline'\n  },\n  'visibility': {\n    canOverride: canOverride.property.visibility,\n    defaultValue: 'visible'\n  },\n  'white-space': {\n    canOverride: canOverride.property.whiteSpace,\n    defaultValue: 'normal'\n  },\n  'width': {\n    canOverride: canOverride.generic.unit,\n    defaultValue: 'auto',\n    shortestValue: '0'\n  },\n  'z-index': {\n    canOverride: canOverride.property.zIndex,\n    defaultValue: 'auto'\n  }\n};\n\nfunction cloneDescriptor(propertyName, prefix) {\n  var clonedDescriptor = override(compactable[propertyName], {});\n\n  if ('componentOf' in clonedDescriptor) {\n    clonedDescriptor.componentOf = clonedDescriptor.componentOf.map(function (shorthandName) {\n      return prefix + shorthandName;\n    });\n  }\n\n  if ('components' in clonedDescriptor) {\n    clonedDescriptor.components = clonedDescriptor.components.map(function (longhandName) {\n      return prefix + longhandName;\n    });\n  }\n\n  if ('keepUnlessDefault' in clonedDescriptor) {\n    clonedDescriptor.keepUnlessDefault = prefix + clonedDescriptor.keepUnlessDefault;\n  }\n\n  return clonedDescriptor;\n} // generate vendor-prefixed properties\n\n\nvar vendorPrefixedCompactable = {};\n\nfor (var propertyName in compactable) {\n  var descriptor = compactable[propertyName];\n\n  if (!('vendorPrefixes' in descriptor)) {\n    continue;\n  }\n\n  for (var i = 0; i < descriptor.vendorPrefixes.length; i++) {\n    var prefix = descriptor.vendorPrefixes[i];\n    var clonedDescriptor = cloneDescriptor(propertyName, prefix);\n    delete clonedDescriptor.vendorPrefixes;\n    vendorPrefixedCompactable[prefix + propertyName] = clonedDescriptor;\n  }\n\n  delete descriptor.vendorPrefixes;\n}\n\nmodule.exports = override(compactable, vendorPrefixedCompactable);","map":null,"metadata":{},"sourceType":"script"}