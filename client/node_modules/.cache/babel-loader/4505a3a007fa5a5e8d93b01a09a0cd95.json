{"ast":null,"code":"import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.function.name\";\nimport \"core-js/modules/es.object.assign\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Markdown from 'rsg-components/Markdown';\nimport Argument from 'rsg-components/Argument';\nimport Arguments from 'rsg-components/Arguments';\nimport Name from 'rsg-components/Name';\nimport JsDoc from 'rsg-components/JsDoc';\nimport Table from 'rsg-components/Table';\n\nvar getRowKey = function getRowKey(row) {\n  return row.name;\n};\n\nexport var columns = [{\n  caption: 'Method name',\n  // eslint-disable-next-line react/prop-types\n  render: function render(_ref) {\n    var name = _ref.name,\n        _ref$tags = _ref.tags,\n        tags = _ref$tags === void 0 ? {} : _ref$tags;\n    return React.createElement(Name, {\n      deprecated: !!tags.deprecated\n    }, name + \"()\");\n  }\n}, {\n  caption: 'Parameters',\n  // eslint-disable-next-line react/prop-types\n  render: function render(_ref2) {\n    var _ref2$params = _ref2.params,\n        params = _ref2$params === void 0 ? [] : _ref2$params;\n    return React.createElement(Arguments, {\n      args: params\n    });\n  }\n}, {\n  caption: 'Description',\n  // eslint-disable-next-line react/prop-types\n  render: function render(_ref3) {\n    var description = _ref3.description,\n        returns = _ref3.returns,\n        _ref3$tags = _ref3.tags,\n        tags = _ref3$tags === void 0 ? {} : _ref3$tags;\n    return React.createElement(\"div\", null, description && React.createElement(Markdown, {\n      text: description\n    }), returns && React.createElement(Argument, _extends({\n      block: true,\n      returns: true\n    }, returns)), React.createElement(JsDoc, tags));\n  }\n}];\nexport default function MethodsRenderer(_ref4) {\n  var methods = _ref4.methods;\n  return React.createElement(Table, {\n    columns: columns,\n    rows: methods,\n    getRowKey: getRowKey\n  });\n}\nMethodsRenderer.propTypes = {\n  methods: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    returns: PropTypes.object,\n    params: PropTypes.array,\n    tags: PropTypes.object\n  })).isRequired\n};","map":null,"metadata":{},"sourceType":"module"}