{"ast":null,"code":"import \"core-js/modules/es.array.concat\";\nimport \"core-js/modules/es.array.map\";\nimport \"core-js/modules/es.function.name\";\nimport \"core-js/modules/es.object.assign\";\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ComponentsList from 'rsg-components/ComponentsList';\nimport TableOfContentsRenderer from 'rsg-components/TableOfContents/TableOfContentsRenderer';\nimport filterSectionsByName from '../../utils/filterSectionsByName';\n\nvar TableOfContents =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TableOfContents, _Component);\n\n  function TableOfContents() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      searchTerm: ''\n    });\n\n    return _this;\n  }\n\n  var _proto = TableOfContents.prototype;\n\n  _proto.renderLevel = function renderLevel(sections, useRouterLinks, hashPath, useHashId) {\n    var _this2 = this;\n\n    if (useRouterLinks === void 0) {\n      useRouterLinks = false;\n    }\n\n    if (hashPath === void 0) {\n      hashPath = [];\n    }\n\n    if (useHashId === void 0) {\n      useHashId = false;\n    }\n\n    var items = sections.map(function (section) {\n      var children = [].concat(section.sections || [], section.components || []);\n      var sectionDepth = section.sectionDepth || 0;\n      var childHashPath = sectionDepth === 0 && useHashId ? hashPath : [].concat(hashPath, [section.name]);\n      return Object.assign({}, section, {\n        heading: !!section.name && children.length > 0,\n        content: children.length > 0 && _this2.renderLevel(children, useRouterLinks, childHashPath, sectionDepth === 0)\n      });\n    });\n    return React.createElement(ComponentsList, {\n      items: items,\n      hashPath: hashPath,\n      useHashId: useHashId,\n      useRouterLinks: useRouterLinks\n    });\n  };\n\n  _proto.renderSections = function renderSections() {\n    var searchTerm = this.state.searchTerm;\n    var _this$props = this.props,\n        sections = _this$props.sections,\n        useRouterLinks = _this$props.useRouterLinks; // If there is only one section, we treat it as a root section\n    // In this case the name of the section won't be rendered and it won't get left padding\n    // Since a section can contain only other sections,\n    // we need to make sure not to loose the subsections.\n    // We will treat those subsections as the new roots.\n\n    var firstLevel = sections.length === 1 ? // only use subsections if there actually are subsections\n    sections[0].sections && sections[0].sections.length ? sections[0].sections : sections[0].components : sections;\n    var filtered = filterSectionsByName(firstLevel, searchTerm);\n    return this.renderLevel(filtered, useRouterLinks);\n  };\n\n  _proto.render = function render() {\n    var _this3 = this;\n\n    return React.createElement(TableOfContentsRenderer, {\n      searchTerm: this.state.searchTerm,\n      onSearchTermChange: function onSearchTermChange(searchTerm) {\n        return _this3.setState({\n          searchTerm: searchTerm\n        });\n      }\n    }, this.renderSections());\n  };\n\n  return TableOfContents;\n}(Component);\n\n_defineProperty(TableOfContents, \"propTypes\", {\n  sections: PropTypes.array.isRequired,\n  useRouterLinks: PropTypes.bool\n});\n\nexport { TableOfContents as default };","map":null,"metadata":{},"sourceType":"module"}