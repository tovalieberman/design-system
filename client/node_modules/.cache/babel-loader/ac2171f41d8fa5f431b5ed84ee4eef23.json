{"ast":null,"code":"import _defineProperty from \"/Users/tliebe1/Code/design-system/glic-design-system/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport * as Counter from './Counter';\nimport * as Products from './Products';\nexport default function configureStore(history, initialState) {\n  var reducers = {\n    counter: Counter.reducer,\n    products: Products.reducer\n  };\n  var middleware = [thunk]; // In development, use the browser's Redux dev tools extension if installed\n\n  var enhancers = [];\n  var isDevelopment = process.env.NODE_ENV === 'development';\n\n  if (isDevelopment && typeof window !== 'undefined' && window.devToolsExtension) {\n    enhancers.push(window.devToolsExtension());\n  }\n\n  var rootReducer = combineReducers(_objectSpread({}, reducers));\n  return createStore(rootReducer, initialState, compose.apply(void 0, [applyMiddleware.apply(void 0, middleware)].concat(enhancers)));\n}","map":{"version":3,"sources":["/Users/tliebe1/Code/design-system/glic-design-system/client/src/store/configureStore.js"],"names":["applyMiddleware","combineReducers","compose","createStore","thunk","Counter","Products","configureStore","history","initialState","reducers","counter","reducer","products","middleware","enhancers","isDevelopment","process","env","NODE_ENV","window","devToolsExtension","push","rootReducer"],"mappings":";;;;;;AAAA,SAASA,eAAT,EAA0BC,eAA1B,EAA2CC,OAA3C,EAAoDC,WAApD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;AAEA,eAAe,SAASC,cAAT,CAAwBC,OAAxB,EAAiCC,YAAjC,EAA+C;AAE5D,MAAMC,QAAQ,GAAG;AACfC,IAAAA,OAAO,EAAEN,OAAO,CAACO,OADF;AAEfC,IAAAA,QAAQ,EAAEP,QAAQ,CAACM;AAFJ,GAAjB;AAKA,MAAME,UAAU,GAAG,CACjBV,KADiB,CAAnB,CAP4D,CAW5D;;AACA,MAAMW,SAAS,GAAG,EAAlB;AACA,MAAMC,aAAa,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA/C;;AACA,MAAIH,aAAa,IAAI,OAAOI,MAAP,KAAkB,WAAnC,IAAkDA,MAAM,CAACC,iBAA7D,EAAgF;AAC9EN,IAAAA,SAAS,CAACO,IAAV,CAAeF,MAAM,CAACC,iBAAP,EAAf;AACD;;AAED,MAAME,WAAW,GAAGtB,eAAe,mBAC9BS,QAD8B,EAAnC;AAIA,SAAOP,WAAW,CAChBoB,WADgB,EAEhBd,YAFgB,EAGhBP,OAAO,MAAP,UAAQF,eAAe,MAAf,SAAmBc,UAAnB,CAAR,SAA2CC,SAA3C,EAHgB,CAAlB;AAKD","sourcesContent":["import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport * as Counter from './Counter';\nimport * as Products from './Products';\n\nexport default function configureStore(history, initialState) {\n\n  const reducers = {\n    counter: Counter.reducer,\n    products: Products.reducer\n  };\n\n  const middleware = [\n    thunk\n  ];\n\n  // In development, use the browser's Redux dev tools extension if installed\n  const enhancers = [];\n  const isDevelopment = process.env.NODE_ENV === 'development';\n  if (isDevelopment && typeof window !== 'undefined' && window.devToolsExtension) {\n    enhancers.push(window.devToolsExtension());\n  }\n\n  const rootReducer = combineReducers({\n    ...reducers\n  });\n\n  return createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware), ...enhancers)\n  );\n}\n"]},"metadata":{},"sourceType":"module"}