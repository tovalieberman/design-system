{"ast":null,"code":"// Generated by CoffeeScript 1.9.3\nvar Padding,\n    PaddingBottom,\n    PaddingLeft,\n    PaddingRight,\n    PaddingTop,\n    _Declaration,\n    extend = function extend(child, parent) {\n  for (var key in parent) {\n    if (hasProp.call(parent, key)) child[key] = parent[key];\n  }\n\n  function ctor() {\n    this.constructor = child;\n  }\n\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n  child.__super__ = parent.prototype;\n  return child;\n},\n    hasProp = {}.hasOwnProperty;\n\n_Declaration = require('./_Declaration');\nPaddingTop = require('./PaddingTop');\nPaddingLeft = require('./PaddingLeft');\nPaddingRight = require('./PaddingRight');\nPaddingBottom = require('./PaddingBottom');\n\nmodule.exports = Padding = function (superClass) {\n  var self;\n  extend(Padding, superClass);\n\n  function Padding() {\n    return Padding.__super__.constructor.apply(this, arguments);\n  }\n\n  self = Padding;\n\n  Padding.setOnto = function (declarations, prop, originalValue) {\n    var append, val, vals;\n    append = '';\n    val = _Declaration.sanitizeValue(originalValue);\n\n    if (_Declaration.importantClauseRx.test(String(val))) {\n      append = ' !important';\n      val = val.replace(_Declaration.importantClauseRx, '');\n    }\n\n    val = val.trim();\n\n    if (val.length === 0) {\n      return self._setAllDirections(declarations, append, append, append, append);\n    }\n\n    vals = val.split(\" \").map(function (val) {\n      return val + append;\n    });\n\n    if (vals.length === 1) {\n      return self._setAllDirections(declarations, vals[0], vals[0], vals[0], vals[0]);\n    } else if (vals.length === 2) {\n      return self._setAllDirections(declarations, vals[0], vals[1], vals[0], vals[1]);\n    } else if (vals.length === 3) {\n      return self._setAllDirections(declarations, vals[0], vals[1], vals[2], vals[1]);\n    } else if (vals.length === 4) {\n      return self._setAllDirections(declarations, vals[0], vals[1], vals[2], vals[3]);\n    } else {\n      throw Error(\"Can't understand value for padding: `\" + originalValue + \"`\");\n    }\n  };\n\n  Padding._setAllDirections = function (declarations, top, right, bottom, left) {\n    PaddingTop.setOnto(declarations, 'paddingTop', top);\n    PaddingTop.setOnto(declarations, 'paddingRight', right);\n    PaddingTop.setOnto(declarations, 'paddingBottom', bottom);\n    PaddingTop.setOnto(declarations, 'paddingLeft', left);\n  };\n\n  return Padding;\n}(_Declaration);","map":null,"metadata":{},"sourceType":"script"}