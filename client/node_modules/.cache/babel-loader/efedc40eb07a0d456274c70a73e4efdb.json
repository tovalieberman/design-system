{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar quote_1 = require(\"./quote\");\n\nvar object_1 = require(\"./object\");\n\nvar function_1 = require(\"./function\");\n/**\n * Stringify primitive values.\n */\n\n\nvar PRIMITIVE_TYPES = {\n  string: quote_1.quoteString,\n  number: function number(value) {\n    return Object.is(value, -0) ? \"-0\" : String(value);\n  },\n  boolean: String,\n  symbol: function symbol(value, space, next) {\n    var key = Symbol.keyFor(value);\n    if (key !== undefined) return \"Symbol.for(\".concat(next(key), \")\"); // ES2018 `Symbol.description`.\n\n    return \"Symbol(\".concat(next(value.description), \")\");\n  },\n  bigint: function bigint(value, space, next) {\n    return \"BigInt(\".concat(next(String(value)), \")\");\n  },\n  undefined: String,\n  object: object_1.objectToString,\n  function: function_1.functionToString\n};\n/**\n * Stringify a value recursively.\n */\n\nexports.toString = function (value, space, next, key) {\n  if (value === null) return \"null\";\n  return PRIMITIVE_TYPES[typeof value](value, space, next, key);\n};","map":null,"metadata":{},"sourceType":"script"}