{"ast":null,"code":"var DEFAULTS = {\n  '*': {\n    colors: {\n      opacity: true // rgba / hsla\n\n    },\n    properties: {\n      backgroundClipMerging: true,\n      // background-clip to shorthand\n      backgroundOriginMerging: true,\n      // background-origin to shorthand\n      backgroundSizeMerging: true,\n      // background-size to shorthand\n      colors: true,\n      // any kind of color transformations, like `#ff00ff` to `#f0f` or `#fff` into `red`\n      ieBangHack: false,\n      // !ie suffix hacks on IE<8\n      ieFilters: false,\n      // whether to preserve `filter` and `-ms-filter` properties\n      iePrefixHack: false,\n      // underscore / asterisk prefix hacks on IE\n      ieSuffixHack: false,\n      // \\9 suffix hacks on IE6-9\n      merging: true,\n      // merging properties into one\n      shorterLengthUnits: false,\n      // optimize pixel units into `pt`, `pc` or `in` units\n      spaceAfterClosingBrace: true,\n      // 'url() no-repeat' to 'url()no-repeat'\n      urlQuotes: false,\n      // whether to wrap content of `url()` into quotes or not\n      zeroUnits: true // 0[unit] -> 0\n\n    },\n    selectors: {\n      adjacentSpace: false,\n      // div+ nav Android stock browser hack\n      ie7Hack: false,\n      // *+html hack\n      mergeablePseudoClasses: [':active', ':after', ':before', ':empty', ':checked', ':disabled', ':empty', ':enabled', ':first-child', ':first-letter', ':first-line', ':first-of-type', ':focus', ':hover', ':lang', ':last-child', ':last-of-type', ':link', ':not', ':nth-child', ':nth-last-child', ':nth-last-of-type', ':nth-of-type', ':only-child', ':only-of-type', ':root', ':target', ':visited'],\n      // selectors with these pseudo-classes can be merged as these are universally supported\n      mergeablePseudoElements: ['::after', '::before', '::first-letter', '::first-line'],\n      // selectors with these pseudo-elements can be merged as these are universally supported\n      mergeLimit: 8191,\n      // number of rules that can be safely merged together\n      multiplePseudoMerging: true\n    },\n    units: {\n      ch: true,\n      in: true,\n      pc: true,\n      pt: true,\n      rem: true,\n      vh: true,\n      vm: true,\n      // vm is vmin on IE9+ see https://developer.mozilla.org/en-US/docs/Web/CSS/length\n      vmax: true,\n      vmin: true,\n      vw: true\n    }\n  }\n};\nDEFAULTS.ie11 = DEFAULTS['*'];\nDEFAULTS.ie10 = DEFAULTS['*'];\nDEFAULTS.ie9 = merge(DEFAULTS['*'], {\n  properties: {\n    ieFilters: true,\n    ieSuffixHack: true\n  }\n});\nDEFAULTS.ie8 = merge(DEFAULTS.ie9, {\n  colors: {\n    opacity: false\n  },\n  properties: {\n    backgroundClipMerging: false,\n    backgroundOriginMerging: false,\n    backgroundSizeMerging: false,\n    iePrefixHack: true,\n    merging: false\n  },\n  selectors: {\n    mergeablePseudoClasses: [':after', ':before', ':first-child', ':first-letter', ':focus', ':hover', ':visited'],\n    mergeablePseudoElements: []\n  },\n  units: {\n    ch: false,\n    rem: false,\n    vh: false,\n    vm: false,\n    vmax: false,\n    vmin: false,\n    vw: false\n  }\n});\nDEFAULTS.ie7 = merge(DEFAULTS.ie8, {\n  properties: {\n    ieBangHack: true\n  },\n  selectors: {\n    ie7Hack: true,\n    mergeablePseudoClasses: [':first-child', ':first-letter', ':hover', ':visited']\n  }\n});\n\nfunction compatibilityFrom(source) {\n  return merge(DEFAULTS['*'], calculateSource(source));\n}\n\nfunction merge(source, target) {\n  for (var key in source) {\n    var value = source[key];\n\n    if (typeof value === 'object' && !Array.isArray(value)) {\n      target[key] = merge(value, target[key] || {});\n    } else {\n      target[key] = key in target ? target[key] : value;\n    }\n  }\n\n  return target;\n}\n\nfunction calculateSource(source) {\n  if (typeof source == 'object') return source;\n  if (!/[,\\+\\-]/.test(source)) return DEFAULTS[source] || DEFAULTS['*'];\n  var parts = source.split(',');\n  var template = parts[0] in DEFAULTS ? DEFAULTS[parts.shift()] : DEFAULTS['*'];\n  source = {};\n  parts.forEach(function (part) {\n    var isAdd = part[0] == '+';\n    var key = part.substring(1).split('.');\n    var group = key[0];\n    var option = key[1];\n    source[group] = source[group] || {};\n    source[group][option] = isAdd;\n  });\n  return merge(template, source);\n}\n\nmodule.exports = compatibilityFrom;","map":null,"metadata":{},"sourceType":"script"}