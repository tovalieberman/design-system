{"ast":null,"code":"import \"core-js/modules/es.array.map\";\nimport \"core-js/modules/es.regexp.constructor\";\nimport \"core-js/modules/es.regexp.to-string\";\nimport \"core-js/modules/es.string.replace\";\nimport \"core-js/modules/es.string.split\";\nimport escapeRegExp from 'lodash/escapeRegExp'; // Weâ€™re using this file to handle the hash to develop the routes, there are two types of hash '#/' and '#!/'\n// However, it is a temporal solution because is necessary using a library third-party that it is his focus\n// You can find more information here:\n// https://github.com/styleguidist/react-styleguidist/pull/993\n\nvar defaultPrependHash = '#/';\nvar separator = '/';\nvar hashValRegexp = /(.*)\\?/;\n\nfunction trimHash(hash, prependHash) {\n  if (!hash) {\n    return '';\n  }\n\n  var regexp = new RegExp('^' + escapeRegExp(prependHash || defaultPrependHash), 'g');\n  return hash.replace(regexp, '');\n}\n\nvar trimParams = function trimParams(hash) {\n  var result = hashValRegexp.exec(hash);\n  return result && result[1] || hash;\n};\n/**\n * If hash has a certain element\n *\n * @param {string} hash\n * @param {string} search\n * @return {boolean}\n */\n\n\nexport var hasInHash = function hasInHash(hash, search) {\n  return hash !== '' && hash.indexOf(search) > -1;\n};\n/**\n * Get hash value without '#', prependHash and parameters\n *\n * @param {string} hash\n * @param {string} prependHash\n * @return {string}\n */\n\nexport var getHash = function getHash(hash, prependHash) {\n  return decodeURIComponent(trimParams(trimHash(hash, prependHash)));\n};\n/**\n * Get hash value split into an Array.\n *\n * @param {string} hash\n * @param {string} prependHash\n * @return {Array.<string>}\n */\n\nexport var getHashAsArray = function getHashAsArray(hash, prependHash) {\n  return trimParams(trimHash(hash, prependHash)).split(separator).map(decodeURIComponent);\n};\n/**\n * Get a parameter by name in hash\n *\n * @param {string} hash\n * @param {string} name\n * @return {string}\n */\n\nexport var getParameterByName = function getParameterByName(hash, name) {\n  name = name.replace(/[[\\]]/g, '\\\\$&');\n  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)');\n  var results = regex.exec(hash);\n\n  if (!results) {\n    return null;\n  }\n\n  if (!results[2]) {\n    return '';\n  }\n\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n};","map":null,"metadata":{},"sourceType":"module"}