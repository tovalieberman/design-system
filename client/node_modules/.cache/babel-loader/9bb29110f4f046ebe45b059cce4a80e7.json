{"ast":null,"code":"// HSL to RGB converter. Both methods adapted from:\n// http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\nfunction hslToRgb(h, s, l) {\n  var r, g, b; // normalize hue orientation b/w 0 and 360 degrees\n\n  h = h % 360;\n  if (h < 0) h += 360;\n  h = ~~h / 360;\n  if (s < 0) s = 0;else if (s > 100) s = 100;\n  s = ~~s / 100;\n  if (l < 0) l = 0;else if (l > 100) l = 100;\n  l = ~~l / 100;\n\n  if (s === 0) {\n    r = g = b = l; // achromatic\n  } else {\n    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    var p = 2 * l - q;\n    r = hueToRgb(p, q, h + 1 / 3);\n    g = hueToRgb(p, q, h);\n    b = hueToRgb(p, q, h - 1 / 3);\n  }\n\n  return [~~(r * 255), ~~(g * 255), ~~(b * 255)];\n}\n\nfunction hueToRgb(p, q, t) {\n  if (t < 0) t += 1;\n  if (t > 1) t -= 1;\n  if (t < 1 / 6) return p + (q - p) * 6 * t;\n  if (t < 1 / 2) return q;\n  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n  return p;\n}\n\nfunction shortenHsl(hue, saturation, lightness) {\n  var asRgb = hslToRgb(hue, saturation, lightness);\n  var redAsHex = asRgb[0].toString(16);\n  var greenAsHex = asRgb[1].toString(16);\n  var blueAsHex = asRgb[2].toString(16);\n  return '#' + ((redAsHex.length == 1 ? '0' : '') + redAsHex) + ((greenAsHex.length == 1 ? '0' : '') + greenAsHex) + ((blueAsHex.length == 1 ? '0' : '') + blueAsHex);\n}\n\nmodule.exports = shortenHsl;","map":null,"metadata":{},"sourceType":"script"}