{"ast":null,"code":"'use strict';\n\nvar path = require('path');\n\nvar matchRelativePath = /^\\.\\.?[/\\\\]/;\n\nfunction isAbsolutePath(str) {\n  return path.posix.isAbsolute(str) || path.win32.isAbsolute(str);\n}\n\nfunction isRelativePath(str) {\n  return matchRelativePath.test(str);\n}\n\nfunction stringifyRequest(loaderContext, request) {\n  var splitted = request.split('!');\n  var context = loaderContext.context || loaderContext.options && loaderContext.options.context;\n  return JSON.stringify(splitted.map(function (part) {\n    // First, separate singlePath from query, because the query might contain paths again\n    var splittedPart = part.match(/^(.*?)(\\?.*)/);\n    var query = splittedPart ? splittedPart[2] : '';\n    var singlePath = splittedPart ? splittedPart[1] : part;\n\n    if (isAbsolutePath(singlePath) && context) {\n      singlePath = path.relative(context, singlePath);\n\n      if (isAbsolutePath(singlePath)) {\n        // If singlePath still matches an absolute path, singlePath was on a different drive than context.\n        // In this case, we leave the path platform-specific without replacing any separators.\n        // @see https://github.com/webpack/loader-utils/pull/14\n        return singlePath + query;\n      }\n\n      if (isRelativePath(singlePath) === false) {\n        // Ensure that the relative path starts at least with ./ otherwise it would be a request into the modules directory (like node_modules).\n        singlePath = './' + singlePath;\n      }\n    }\n\n    return singlePath.replace(/\\\\/g, '/') + query;\n  }).join('!'));\n}\n\nmodule.exports = stringifyRequest;","map":null,"metadata":{},"sourceType":"script"}