{"ast":null,"code":"import \"core-js/modules/es.array.filter\";\nimport isNaN from 'lodash/isNaN';\nimport { hasInHash, getHashAsArray } from './handleHash';\n\nfunction filterNumbers(item) {\n  return isNaN(parseInt(item, 10)) && item !== '';\n}\n/**\n * Returns an object containing component/section name and, optionally, an example index\n * from hash part or page URL:\n * #!/Button → { targetName: 'Button' }\n * #!/Button/1 → { targetName: 'Button', targetIndex: 1 }\n *\n * @param {string} hash\n * @returns {object}\n */\n\n\nexport default function getInfoFromHash(hash) {\n  var shouldIsolate = hasInHash(hash, '#!/');\n\n  if (shouldIsolate || hasInHash(hash, '#/')) {\n    var hashArray = getHashAsArray(hash, shouldIsolate ? '#!/' : '#/');\n    var index = parseInt(hashArray[hashArray.length - 1], 10);\n    return {\n      isolate: shouldIsolate,\n      hashArray: hashArray.filter(filterNumbers),\n      targetName: hashArray[0],\n      targetIndex: isNaN(index) ? undefined : index\n    };\n  }\n\n  return {};\n}","map":null,"metadata":{},"sourceType":"module"}