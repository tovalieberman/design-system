{"ast":null,"code":"// Generated by CoffeeScript 1.9.3\nvar htmlparser, object, _objectToDom, self;\n\nhtmlparser = require('htmlparser2');\nobject = require('utila').object;\n_objectToDom = require('dom-converter').objectToDom;\nmodule.exports = self = {\n  repeatString: function repeatString(str, times) {\n    var i, j, output, ref;\n    output = '';\n\n    for (i = j = 0, ref = times; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n      output += str;\n    }\n\n    return output;\n  },\n  toDom: function toDom(subject) {\n    if (typeof subject === 'string') {\n      return self.stringToDom(subject);\n    } else if (object.isBareObject(subject)) {\n      return self._objectToDom(subject);\n    } else {\n      throw Error(\"tools.toDom() only supports strings and objects\");\n    }\n  },\n  stringToDom: function stringToDom(string) {\n    var handler, parser;\n    handler = new htmlparser.DomHandler();\n    parser = new htmlparser.Parser(handler);\n    parser.write(string);\n    parser.end();\n    return handler.dom;\n  },\n  _fixQuotesInDom: function _fixQuotesInDom(input) {\n    var j, len, node;\n\n    if (Array.isArray(input)) {\n      for (j = 0, len = input.length; j < len; j++) {\n        node = input[j];\n\n        self._fixQuotesInDom(node);\n      }\n\n      return input;\n    }\n\n    node = input;\n\n    if (node.type === 'text') {\n      return node.data = self._quoteNodeText(node.data);\n    } else {\n      return self._fixQuotesInDom(node.children);\n    }\n  },\n  objectToDom: function objectToDom(o) {\n    if (!Array.isArray(o)) {\n      if (!object.isBareObject(o)) {\n        throw Error(\"objectToDom() only accepts a bare object or an array\");\n      }\n    }\n\n    return self._fixQuotesInDom(_objectToDom(o));\n  },\n  quote: function quote(str) {\n    return String(str).replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\\"/g, '&quot;').replace(/\\ /g, '&sp;').replace(/\\n/g, '<br />');\n  },\n  _quoteNodeText: function _quoteNodeText(text) {\n    return String(text).replace(/\\&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\\"/g, '&quot;').replace(/\\ /g, '&sp;').replace(/\\n/g, \"&nl;\");\n  },\n  getCols: function getCols() {\n    var cols, tty;\n    tty = require('tty');\n\n    cols = function () {\n      try {\n        if (tty.isatty(1) && tty.isatty(2)) {\n          if (process.stdout.getWindowSize) {\n            return process.stdout.getWindowSize(1)[0];\n          } else if (tty.getWindowSize) {\n            return tty.getWindowSize()[1];\n          } else if (process.stdout.columns) {\n            return process.stdout.columns;\n          }\n        }\n      } catch (_error) {}\n    }();\n\n    if (typeof cols === 'number' && cols > 30) {\n      return cols;\n    } else {\n      return 80;\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"script"}