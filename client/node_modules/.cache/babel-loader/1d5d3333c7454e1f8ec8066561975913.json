{"ast":null,"code":"import \"core-js/modules/es.array.concat\";\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Wrapper from 'rsg-components/Wrapper';\nimport compileCode from '../../utils/compileCode';\nimport splitExampleCode from '../../utils/splitExampleCode';\n/* eslint-disable react/no-multi-comp */\n// Wrap the example component with a Functional Component to support\n// hooks in examples\n\nfunction FunctionComponentWrapper(props) {\n  var component = props.component,\n      state = props.state,\n      setState = props.setState; // Return null when component doesn't render anything to avoid an error\n\n  return component(state, setState) || null;\n} // Wrap everything in a React component to leverage the state management\n// of this component\n\n\nvar StateHolder =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(StateHolder, _Component);\n\n  function StateHolder() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", _this.props.initialState);\n\n    _defineProperty(_assertThisInitialized(_this), \"setStateBinded\", _this.setState.bind(_assertThisInitialized(_this)));\n\n    return _this;\n  }\n\n  var _proto = StateHolder.prototype;\n\n  _proto.render = function render() {\n    return React.createElement(FunctionComponentWrapper, {\n      component: this.props.component,\n      state: this.state,\n      setState: this.setStateBinded\n    });\n  };\n\n  return StateHolder;\n}(Component);\n\n_defineProperty(StateHolder, \"propTypes\", {\n  component: PropTypes.func.isRequired,\n  initialState: PropTypes.object.isRequired\n});\n\nvar ReactExample =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inheritsLoose(ReactExample, _Component2);\n\n  function ReactExample() {\n    return _Component2.apply(this, arguments) || this;\n  }\n\n  var _proto2 = ReactExample.prototype;\n\n  _proto2.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    return this.props.code !== nextProps.code;\n  } // Eval the code to extract the value of the initial state\n  ;\n\n  _proto2.getExampleInitialState = function getExampleInitialState(compiledCode) {\n    if (compiledCode.indexOf('initialState') === -1) {\n      return {};\n    }\n\n    return this.props.evalInContext(\"\\n\\t\\t\\tvar state = {}, initialState = {};\\n\\t\\t\\ttry {\\n\\t\\t\\t\\t\" + compiledCode + \";\\n\\t\\t\\t} catch (err) {}\\n\\t\\t\\treturn initialState;\\n\\t\\t\")();\n  } // Run example code and return the last top-level expression\n  ;\n\n  _proto2.getExampleComponent = function getExampleComponent(compiledCode) {\n    return this.props.evalInContext(\"\\n\\t\\t\\tvar initialState = {};\\n\\t\\t\\t\" + compiledCode + \"\\n\\t\\t\");\n  };\n\n  _proto2.render = function render() {\n    var _this$props = this.props,\n        code = _this$props.code,\n        compilerConfig = _this$props.compilerConfig,\n        onError = _this$props.onError;\n    var compiledCode = compileCode(code, compilerConfig, onError);\n\n    if (!compiledCode) {\n      return null;\n    }\n\n    var _splitExampleCode = splitExampleCode(compiledCode),\n        head = _splitExampleCode.head,\n        example = _splitExampleCode.example;\n\n    var initialState = this.getExampleInitialState(head);\n    var exampleComponent = this.getExampleComponent(example);\n    var wrappedComponent = React.createElement(Wrapper, {\n      onError: onError\n    }, React.createElement(StateHolder, {\n      component: exampleComponent,\n      initialState: initialState\n    }));\n    return wrappedComponent;\n  };\n\n  return ReactExample;\n}(Component);\n\n_defineProperty(ReactExample, \"propTypes\", {\n  code: PropTypes.string.isRequired,\n  evalInContext: PropTypes.func.isRequired,\n  onError: PropTypes.func.isRequired,\n  compilerConfig: PropTypes.object\n});\n\nexport { ReactExample as default };","map":null,"metadata":{},"sourceType":"module"}