{"ast":null,"code":"import _defineProperty from \"/Users/tliebe1/Code/design-system/glic-design-system/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar incrementCountType = 'INCREMENT_COUNT';\nvar decrementCountType = 'DECREMENT_COUNT';\nvar initialState = {\n  count: 0\n};\nexport var actionCreators = {\n  increment: function increment() {\n    return {\n      type: incrementCountType\n    };\n  },\n  decrement: function decrement() {\n    return {\n      type: decrementCountType\n    };\n  }\n};\nexport var reducer = function reducer(state, action) {\n  state = state || initialState;\n\n  if (action.type === incrementCountType) {\n    return _objectSpread({}, state, {\n      count: state.count + 1\n    });\n  }\n\n  if (action.type === decrementCountType) {\n    return _objectSpread({}, state, {\n      count: state.count - 1\n    });\n  }\n\n  return state;\n};","map":{"version":3,"sources":["/Users/tliebe1/Code/design-system/glic-design-system/client/src/store/Counter.js"],"names":["incrementCountType","decrementCountType","initialState","count","actionCreators","increment","type","decrement","reducer","state","action"],"mappings":";;;;;;AAAA,IAAMA,kBAAkB,GAAG,iBAA3B;AACA,IAAMC,kBAAkB,GAAG,iBAA3B;AACA,IAAMC,YAAY,GAAG;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAArB;AAEA,OAAO,IAAMC,cAAc,GAAG;AAC5BC,EAAAA,SAAS,EAAE;AAAA,WAAO;AAAEC,MAAAA,IAAI,EAAEN;AAAR,KAAP;AAAA,GADiB;AAE5BO,EAAAA,SAAS,EAAE;AAAA,WAAO;AAAED,MAAAA,IAAI,EAAEL;AAAR,KAAP;AAAA;AAFiB,CAAvB;AAKP,OAAO,IAAMO,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACxCD,EAAAA,KAAK,GAAGA,KAAK,IAAIP,YAAjB;;AAEA,MAAIQ,MAAM,CAACJ,IAAP,KAAgBN,kBAApB,EAAwC;AACtC,6BAAYS,KAAZ;AAAmBN,MAAAA,KAAK,EAAEM,KAAK,CAACN,KAAN,GAAc;AAAxC;AACD;;AAED,MAAIO,MAAM,CAACJ,IAAP,KAAgBL,kBAApB,EAAwC;AACtC,6BAAYQ,KAAZ;AAAmBN,MAAAA,KAAK,EAAEM,KAAK,CAACN,KAAN,GAAc;AAAxC;AACD;;AAED,SAAOM,KAAP;AACD,CAZM","sourcesContent":["const incrementCountType = 'INCREMENT_COUNT';\nconst decrementCountType = 'DECREMENT_COUNT';\nconst initialState = { count: 0 };\n\nexport const actionCreators = {\n  increment: () => ({ type: incrementCountType }),\n  decrement: () => ({ type: decrementCountType })\n};\n\nexport const reducer = (state, action) => {\n  state = state || initialState;\n\n  if (action.type === incrementCountType) {\n    return { ...state, count: state.count + 1 };\n  }\n\n  if (action.type === decrementCountType) {\n    return { ...state, count: state.count - 1 };\n  }\n\n  return state;\n};\n"]},"metadata":{},"sourceType":"module"}