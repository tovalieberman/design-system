{"ast":null,"code":"var fs = require(\"fs\");\n\nexports.FILES = [\"../lib/utils.js\", \"../lib/ast.js\", \"../lib/parse.js\", \"../lib/transform.js\", \"../lib/scope.js\", \"../lib/output.js\", \"../lib/compress.js\", \"../lib/sourcemap.js\", \"../lib/mozilla-ast.js\", \"../lib/propmangle.js\", \"../lib/minify.js\", \"./exports.js\"].map(function (file) {\n  return require.resolve(file);\n});\nnew Function(\"MOZ_SourceMap\", \"exports\", function () {\n  var code = exports.FILES.map(function (file) {\n    return fs.readFileSync(file, \"utf8\");\n  });\n  code.push(\"exports.describe_ast = \" + describe_ast.toString());\n  return code.join(\"\\n\\n\");\n}())(require(\"source-map\"), exports);\n\nfunction describe_ast() {\n  var out = OutputStream({\n    beautify: true\n  });\n\n  function doitem(ctor) {\n    out.print(\"AST_\" + ctor.TYPE);\n    var props = ctor.SELF_PROPS.filter(function (prop) {\n      return !/^\\$/.test(prop);\n    });\n\n    if (props.length > 0) {\n      out.space();\n      out.with_parens(function () {\n        props.forEach(function (prop, i) {\n          if (i) out.space();\n          out.print(prop);\n        });\n      });\n    }\n\n    if (ctor.documentation) {\n      out.space();\n      out.print_string(ctor.documentation);\n    }\n\n    if (ctor.SUBCLASSES.length > 0) {\n      out.space();\n      out.with_block(function () {\n        ctor.SUBCLASSES.forEach(function (ctor, i) {\n          out.indent();\n          doitem(ctor);\n          out.newline();\n        });\n      });\n    }\n  }\n\n  ;\n  doitem(AST_Node);\n  return out + \"\\n\";\n}\n\nfunction infer_options(options) {\n  var result = exports.minify(\"\", options);\n  return result.error && result.error.defs;\n}\n\nexports.default_options = function () {\n  var defs = {};\n  Object.keys(infer_options({\n    0: 0\n  })).forEach(function (component) {\n    var options = {};\n    options[component] = {\n      0: 0\n    };\n\n    if (options = infer_options(options)) {\n      defs[component] = options;\n    }\n  });\n  return defs;\n};","map":null,"metadata":{},"sourceType":"script"}