{"ast":null,"code":"import \"core-js/modules/es.function.name\";\nimport \"core-js/modules/es.object.assign\";\nimport \"core-js/modules/es.string.replace\";\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { Component } from 'react';\nimport Context from '../Context';\nimport createStyleSheet from '../../styles/createStyleSheet';\nexport { Theme } from '../../../typings/Theme';\nexport default function StyleHOC(styles) {\n  return function (WrappedComponent) {\n    var _class, _temp;\n\n    var componentName = WrappedComponent.name.replace(/Renderer$/, '');\n    return _temp = _class =\n    /*#__PURE__*/\n    function (_Component) {\n      _inheritsLoose(_class, _Component);\n\n      function _class(props, context) {\n        var _this;\n\n        _this = _Component.call(this, props, context) || this;\n\n        _defineProperty(_assertThisInitialized(_this), \"sheet\", void 0);\n\n        _this.sheet = createStyleSheet(styles, context.config || {}, componentName);\n\n        _this.sheet.update(props).attach();\n\n        return _this;\n      }\n\n      var _proto = _class.prototype;\n\n      _proto.componentDidUpdate = function componentDidUpdate(nextProps) {\n        this.sheet.update(nextProps);\n      };\n\n      _proto.render = function render() {\n        return React.createElement(WrappedComponent, Object.assign({}, this.props, {\n          classes: this.sheet.classes\n        }));\n      };\n\n      return _class;\n    }(Component), _defineProperty(_class, \"displayName\", \"Styled(\" + componentName + \")\"), _defineProperty(_class, \"contextType\", Context), _temp;\n  };\n}","map":null,"metadata":{},"sourceType":"module"}