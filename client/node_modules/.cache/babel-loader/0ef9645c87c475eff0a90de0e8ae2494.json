{"ast":null,"code":"import \"core-js/modules/es.array.concat\";\nimport \"core-js/modules/es.array.map\";\nimport \"core-js/modules/es.object.assign\";\n\n/**\n * Do things that are hard or impossible to do in a loader: we don’t have access to component name\n * and props in the styleguide-loader because we’re using `require` to load the component module.\n *\n * @param {Array} components\n * @return {Array}\n */\nexport default function processComponents(components) {\n  return components.map(function (component) {\n    var newComponent = Object.assign({}, component, {\n      // Add .name shortcuts for names instead of .props.displayName.\n      name: component.props.displayName,\n      visibleName: component.props.visibleName || component.props.displayName,\n      props: Object.assign({}, component.props, {\n        // Append @example doclet to all examples\n        examples: [].concat(component.props.examples || [], component.props.example || [])\n      })\n    });\n    return newComponent;\n  });\n}","map":null,"metadata":{},"sourceType":"module"}