{"ast":null,"code":"// Generated by CoffeeScript 1.12.7\nvar object,\n    self,\n    hasProp = {}.hasOwnProperty;\nobject = require('utila').object;\nmodule.exports = self = {\n  sanitize: function sanitize(val) {\n    return self._toChildren(val);\n  },\n  _toChildren: function _toChildren(val) {\n    var ref;\n\n    if (object.isBareObject(val)) {\n      return self._objectToChildren(val);\n    } else if (Array.isArray(val)) {\n      return self._arrayToChildren(val);\n    } else if (val === null || typeof val === 'undefined') {\n      return [];\n    } else if ((ref = typeof val) === 'string' || ref === 'number') {\n      return [String(val)];\n    } else {\n      throw Error(\"not a valid child node: `\" + val);\n    }\n  },\n  _objectToChildren: function _objectToChildren(o) {\n    var a, cur, key, val;\n    a = [];\n\n    for (key in o) {\n      if (!hasProp.call(o, key)) continue;\n      val = o[key];\n      cur = {};\n      cur[key] = self.sanitize(val);\n      a.push(cur);\n    }\n\n    return a;\n  },\n  _arrayToChildren: function _arrayToChildren(a) {\n    var i, len, ret, v;\n    ret = [];\n\n    for (i = 0, len = a.length; i < len; i++) {\n      v = a[i];\n      ret.push(self._toNode(v));\n    }\n\n    return ret;\n  },\n  _toNode: function _toNode(o) {\n    var key, keys, obj, ref;\n\n    if ((ref = typeof o) === 'string' || ref === 'number') {\n      return String(o);\n    } else if (object.isBareObject(o)) {\n      keys = Object.keys(o);\n\n      if (keys.length !== 1) {\n        throw Error(\"a node must only have one key as tag name\");\n      }\n\n      key = keys[0];\n      obj = {};\n      obj[key] = self._toChildren(o[key]);\n      return obj;\n    } else {\n      throw Error(\"not a valid node: `\" + o + \"`\");\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"script"}