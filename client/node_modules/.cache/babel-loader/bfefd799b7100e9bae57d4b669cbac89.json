{"ast":null,"code":"// Generated by CoffeeScript 1.6.3\nvar common;\nmodule.exports = common = {\n  /*\n  \tChecks to see if o is an object, and it isn't an instance\n  \tof some class.\n  */\n  isBareObject: function isBareObject(o) {\n    if (o != null && o.constructor === Object) {\n      return true;\n    }\n\n    return false;\n  },\n\n  /*\n  \tReturns type of an object, including:\n  \tundefined, null, string, number, array,\n  \targuments, element, textnode, whitespace, and object\n  */\n  typeOf: function typeOf(item) {\n    var _ref;\n\n    if (item === null) {\n      return 'null';\n    }\n\n    if (typeof item !== 'object') {\n      return typeof item;\n    }\n\n    if (Array.isArray(item)) {\n      return 'array';\n    }\n\n    if (item.nodeName) {\n      if (item.nodeType === 1) {\n        return 'element';\n      }\n\n      if (item.nodeType === 3) {\n        return (_ref = /\\S/.test(item.nodeValue)) != null ? _ref : {\n          'textnode': 'whitespace'\n        };\n      }\n    } else if (typeof item.length === 'number') {\n      if (item.callee) {\n        return 'arguments';\n      }\n    }\n\n    return typeof item;\n  },\n  clone: function clone(item, includePrototype) {\n    if (includePrototype == null) {\n      includePrototype = false;\n    }\n\n    switch (common.typeOf(item)) {\n      case 'array':\n        return common._cloneArray(item, includePrototype);\n\n      case 'object':\n        return common._cloneObject(item, includePrototype);\n\n      default:\n        return item;\n    }\n  },\n\n  /*\n  \tDeep clone of an object.\n  \tFrom MooTools\n  */\n  _cloneObject: function _cloneObject(o, includePrototype) {\n    var clone, key;\n\n    if (includePrototype == null) {\n      includePrototype = false;\n    }\n\n    if (common.isBareObject(o)) {\n      clone = {};\n\n      for (key in o) {\n        clone[key] = common.clone(o[key], includePrototype);\n      }\n\n      return clone;\n    } else {\n      if (!includePrototype) {\n        return o;\n      }\n\n      if (o instanceof Function) {\n        return o;\n      }\n\n      clone = Object.create(o.constructor.prototype);\n\n      for (key in o) {\n        if (o.hasOwnProperty(key)) {\n          clone[key] = common.clone(o[key], includePrototype);\n        }\n      }\n\n      return clone;\n    }\n  },\n\n  /*\n  \tDeep clone of an array.\n  \tFrom MooTools\n  */\n  _cloneArray: function _cloneArray(a, includePrototype) {\n    var clone, i;\n\n    if (includePrototype == null) {\n      includePrototype = false;\n    }\n\n    i = a.length;\n    clone = new Array(i);\n\n    while (i--) {\n      clone[i] = common.clone(a[i], includePrototype);\n    }\n\n    return clone;\n  }\n};","map":null,"metadata":{},"sourceType":"script"}