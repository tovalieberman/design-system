{"ast":null,"code":"'use strict';\n\nvar ES = require('es-abstract/es7');\n\nvar defineProperty = Object.defineProperty;\nvar getDescriptor = Object.getOwnPropertyDescriptor;\nvar getOwnNames = Object.getOwnPropertyNames;\nvar getSymbols = Object.getOwnPropertySymbols;\nvar concat = Function.call.bind(Array.prototype.concat);\nvar reduce = Function.call.bind(Array.prototype.reduce);\nvar getAll = getSymbols ? function (obj) {\n  return concat(getOwnNames(obj), getSymbols(obj));\n} : getOwnNames;\nvar isES5 = ES.IsCallable(getDescriptor) && ES.IsCallable(getOwnNames);\n\nvar safePut = function put(obj, prop, val) {\n  // eslint-disable-line max-params\n  if (defineProperty && prop in obj) {\n    defineProperty(obj, prop, {\n      configurable: true,\n      enumerable: true,\n      value: val,\n      writable: true\n    });\n  } else {\n    obj[prop] = val;\n  }\n};\n\nmodule.exports = function getOwnPropertyDescriptors(value) {\n  ES.RequireObjectCoercible(value);\n\n  if (!isES5) {\n    throw new TypeError('getOwnPropertyDescriptors requires Object.getOwnPropertyDescriptor');\n  }\n\n  var O = ES.ToObject(value);\n  return reduce(getAll(O), function (acc, key) {\n    var descriptor = getDescriptor(O, key);\n\n    if (typeof descriptor !== 'undefined') {\n      safePut(acc, key, descriptor);\n    }\n\n    return acc;\n  }, {});\n};","map":null,"metadata":{},"sourceType":"script"}