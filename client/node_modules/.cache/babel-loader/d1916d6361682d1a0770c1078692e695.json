{"ast":null,"code":"import \"core-js/modules/es.object.assign\";\nimport React, { isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { compiler } from 'markdown-to-jsx';\nimport stripHtmlComments from 'strip-html-comments';\nimport Link from '../Link';\nimport Text from '../Text';\nimport Para from '../Para';\nimport MarkdownHeading from '../Markdown/MarkdownHeading';\nimport List from '../Markdown/List';\nimport Blockquote from '../Markdown/Blockquote';\nimport PreBase from '../Markdown/Pre';\nimport Code from '../Code';\nimport Checkbox from '../Markdown/Checkbox';\nimport Hr from '../Markdown/Hr';\nimport { Details, DetailsSummary } from '../Markdown/Details';\nimport { Table, TableHead, TableBody, TableRow, TableCell } from '../Markdown/Table';\n\nvar Pre = function Pre(props) {\n  if (isValidElement(props.children)) {\n    // Avoid rendering <Code> inside <Pre>\n    return React.createElement(PreBase, props.children.props);\n  }\n\n  return React.createElement(PreBase, props);\n};\n\nPre.propTypes = {\n  children: PropTypes.node\n};\nexport var baseOverrides = {\n  a: {\n    component: Link\n  },\n  h1: {\n    component: MarkdownHeading,\n    props: {\n      level: 1\n    }\n  },\n  h2: {\n    component: MarkdownHeading,\n    props: {\n      level: 2\n    }\n  },\n  h3: {\n    component: MarkdownHeading,\n    props: {\n      level: 3\n    }\n  },\n  h4: {\n    component: MarkdownHeading,\n    props: {\n      level: 4\n    }\n  },\n  h5: {\n    component: MarkdownHeading,\n    props: {\n      level: 5\n    }\n  },\n  h6: {\n    component: MarkdownHeading,\n    props: {\n      level: 6\n    }\n  },\n  p: {\n    component: Para,\n    props: {\n      semantic: 'p'\n    }\n  },\n  em: {\n    component: Text,\n    props: {\n      semantic: 'em'\n    }\n  },\n  strong: {\n    component: Text,\n    props: {\n      semantic: 'strong'\n    }\n  },\n  ul: {\n    component: List\n  },\n  ol: {\n    component: List,\n    props: {\n      ordered: true\n    }\n  },\n  blockquote: {\n    component: Blockquote\n  },\n  code: {\n    component: Code\n  },\n  pre: {\n    component: Pre\n  },\n  input: {\n    component: Checkbox\n  },\n  hr: {\n    component: Hr\n  },\n  table: {\n    component: Table\n  },\n  thead: {\n    component: TableHead\n  },\n  th: {\n    component: TableCell,\n    props: {\n      header: true\n    }\n  },\n  tbody: {\n    component: TableBody\n  },\n  tr: {\n    component: TableRow\n  },\n  td: {\n    component: TableCell\n  },\n  details: {\n    component: Details\n  },\n  summary: {\n    component: DetailsSummary\n  }\n};\nexport var inlineOverrides = Object.assign({}, baseOverrides, {\n  p: {\n    component: Text\n  }\n});\n\nfunction Markdown(_ref) {\n  var text = _ref.text,\n      inline = _ref.inline;\n  var overrides = inline ? inlineOverrides : baseOverrides;\n  return compiler(stripHtmlComments(text), {\n    overrides: overrides,\n    forceBlock: true\n  });\n}\n\nMarkdown.propTypes = {\n  text: PropTypes.string.isRequired,\n  inline: PropTypes.bool\n};\nexport default Markdown;","map":null,"metadata":{},"sourceType":"module"}