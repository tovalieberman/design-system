{"ast":null,"code":"import \"core-js/modules/es.array.concat\";\nimport \"core-js/modules/es.function.name\";\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Styled from 'rsg-components/Styled';\nimport Markdown from 'rsg-components/Markdown';\nimport { DOCS_DOCUMENTING } from '../../../scripts/consts';\n\nvar styles = function styles(_ref) {\n  var fontFamily = _ref.fontFamily,\n      fontSize = _ref.fontSize,\n      color = _ref.color;\n  return {\n    button: {\n      padding: 0,\n      fontSize: fontSize.base,\n      fontFamily: fontFamily.base,\n      textDecoration: 'underline',\n      color: color.light,\n      border: 0,\n      cursor: 'pointer',\n      background: 'transparent',\n      '&:hover, &:active': {\n        isolate: false,\n        color: color.lightest\n      }\n    }\n  };\n};\n\nexport var ExamplePlaceholderRenderer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ExamplePlaceholderRenderer, _Component);\n\n  function ExamplePlaceholderRenderer() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isVisible: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOpen\", function () {\n      _this.setState({\n        isVisible: true\n      });\n    });\n\n    return _this;\n  }\n\n  var _proto = ExamplePlaceholderRenderer.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        classes = _this$props.classes,\n        name = _this$props.name;\n    var isVisible = this.state.isVisible;\n\n    if (isVisible) {\n      return React.createElement(Markdown, {\n        text: \"\\nCreate **Readme.md** or **\" + name + \".md** file in the component\\u2019s folder like this:\\n\\n    \" + name + \" example:\\n\\n    ```js\\n    <\" + name + \" pizza=\\\"\\uD83C\\uDF55\\\" />\\n\\t```\\n\\nYou may need to **restart** the style guide server after adding an example file.\\n\\nRead more in the [documenting components guide](\" + DOCS_DOCUMENTING + \").\\n\\t\\t\\t\\t\\t\"\n      });\n    }\n\n    return React.createElement(\"button\", {\n      className: classes.button,\n      onClick: this.handleOpen\n    }, \"Add examples to this component\");\n  };\n\n  return ExamplePlaceholderRenderer;\n}(Component);\n\n_defineProperty(ExamplePlaceholderRenderer, \"propTypes\", {\n  classes: PropTypes.object.isRequired,\n  name: PropTypes.string\n});\n\nexport default Styled(styles)(ExamplePlaceholderRenderer);","map":null,"metadata":{},"sourceType":"module"}