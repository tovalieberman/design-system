{"ast":null,"code":"\"use strict\";\n\nfunction findRelation_upToPath(urlObj, siteUrlObj, options) {\n  // Path- or root-relative URL\n  var pathOnly = urlObj.extra.hrefInfo.minimumPathOnly; // Matching scheme, scheme-relative or path-only\n\n  var minimumScheme = urlObj.scheme === siteUrlObj.scheme || !urlObj.scheme; // Matching auth, ignoring auth or path-only\n\n  var minimumAuth = minimumScheme && (urlObj.auth === siteUrlObj.auth || options.removeAuth || pathOnly); // Matching host or path-only\n\n  var www = options.ignore_www ? \"stripped\" : \"full\";\n  var minimumHost = minimumAuth && (urlObj.host[www] === siteUrlObj.host[www] || pathOnly); // Matching port or path-only\n\n  var minimumPort = minimumHost && (urlObj.port === siteUrlObj.port || pathOnly);\n  urlObj.extra.relation.minimumScheme = minimumScheme;\n  urlObj.extra.relation.minimumAuth = minimumAuth;\n  urlObj.extra.relation.minimumHost = minimumHost;\n  urlObj.extra.relation.minimumPort = minimumPort;\n  urlObj.extra.relation.maximumScheme = !minimumScheme || minimumScheme && !minimumAuth;\n  urlObj.extra.relation.maximumAuth = !minimumScheme || minimumScheme && !minimumHost;\n  urlObj.extra.relation.maximumHost = !minimumScheme || minimumScheme && !minimumPort;\n}\n\nfunction findRelation_pathOn(urlObj, siteUrlObj, options) {\n  var queryOnly = urlObj.extra.hrefInfo.minimumQueryOnly;\n  var hashOnly = urlObj.extra.hrefInfo.minimumHashOnly;\n  var empty = urlObj.extra.hrefInfo.empty; // not required, but self-documenting\n  // From upToPath()\n\n  var minimumPort = urlObj.extra.relation.minimumPort;\n  var minimumScheme = urlObj.extra.relation.minimumScheme; // Matching port and path\n\n  var minimumPath = minimumPort && urlObj.path.absolute.string === siteUrlObj.path.absolute.string; // Matching resource or query/hash-only or empty\n\n  var matchingResource = urlObj.resource === siteUrlObj.resource || !urlObj.resource && siteUrlObj.extra.resourceIsIndex || options.removeDirectoryIndexes && urlObj.extra.resourceIsIndex && !siteUrlObj.resource;\n  var minimumResource = minimumPath && (matchingResource || queryOnly || hashOnly || empty); // Matching query or hash-only/empty\n\n  var query = options.removeEmptyQueries ? \"stripped\" : \"full\";\n  var urlQuery = urlObj.query.string[query];\n  var siteUrlQuery = siteUrlObj.query.string[query];\n  var minimumQuery = minimumResource && !!urlQuery && urlQuery === siteUrlQuery || (hashOnly || empty) && !urlObj.extra.hrefInfo.separatorOnlyQuery;\n  var minimumHash = minimumQuery && urlObj.hash === siteUrlObj.hash;\n  urlObj.extra.relation.minimumPath = minimumPath;\n  urlObj.extra.relation.minimumResource = minimumResource;\n  urlObj.extra.relation.minimumQuery = minimumQuery;\n  urlObj.extra.relation.minimumHash = minimumHash;\n  urlObj.extra.relation.maximumPort = !minimumScheme || minimumScheme && !minimumPath;\n  urlObj.extra.relation.maximumPath = !minimumScheme || minimumScheme && !minimumResource;\n  urlObj.extra.relation.maximumResource = !minimumScheme || minimumScheme && !minimumQuery;\n  urlObj.extra.relation.maximumQuery = !minimumScheme || minimumScheme && !minimumHash;\n  urlObj.extra.relation.maximumHash = !minimumScheme || minimumScheme && !minimumHash; // there's nothing after hash, so it's the same as maximumQuery\n  // Matching path and/or resource with existing but non-matching site query\n\n  urlObj.extra.relation.overridesQuery = minimumPath && urlObj.extra.relation.maximumResource && !minimumQuery && !!siteUrlQuery;\n}\n\nmodule.exports = {\n  pathOn: findRelation_pathOn,\n  upToPath: findRelation_upToPath\n};","map":null,"metadata":{},"sourceType":"script"}