{"ast":null,"code":"var functionNoVendorRegexStr = '[A-Z]+(\\\\-|[A-Z]|[0-9])+\\\\(.*?\\\\)';\nvar functionVendorRegexStr = '\\\\-(\\\\-|[A-Z]|[0-9])+\\\\(.*?\\\\)';\nvar variableRegexStr = 'var\\\\(\\\\-\\\\-[^\\\\)]+\\\\)';\nvar functionAnyRegexStr = '(' + variableRegexStr + '|' + functionNoVendorRegexStr + '|' + functionVendorRegexStr + ')';\nvar calcRegex = new RegExp('^(\\\\-moz\\\\-|\\\\-webkit\\\\-)?calc\\\\([^\\\\)]+\\\\)$', 'i');\nvar decimalRegex = /[0-9]/;\nvar functionAnyRegex = new RegExp('^' + functionAnyRegexStr + '$', 'i');\nvar hslColorRegex = /^hsl\\(\\s{0,31}[\\-\\.]?\\d+\\s{0,31},\\s{0,31}\\.?\\d+%\\s{0,31},\\s{0,31}\\.?\\d+%\\s{0,31}\\)|hsla\\(\\s{0,31}[\\-\\.]?\\d+\\s{0,31},\\s{0,31}\\.?\\d+%\\s{0,31},\\s{0,31}\\.?\\d+%\\s{0,31},\\s{0,31}\\.?\\d+\\s{0,31}\\)$/;\nvar identifierRegex = /^(\\-[a-z0-9_][a-z0-9\\-_]*|[a-z][a-z0-9\\-_]*)$/i;\nvar namedEntityRegex = /^[a-z]+$/i;\nvar prefixRegex = /^-([a-z0-9]|-)*$/i;\nvar rgbColorRegex = /^rgb\\(\\s{0,31}[\\d]{1,3}\\s{0,31},\\s{0,31}[\\d]{1,3}\\s{0,31},\\s{0,31}[\\d]{1,3}\\s{0,31}\\)|rgba\\(\\s{0,31}[\\d]{1,3}\\s{0,31},\\s{0,31}[\\d]{1,3}\\s{0,31},\\s{0,31}[\\d]{1,3}\\s{0,31},\\s{0,31}[\\.\\d]+\\s{0,31}\\)$/;\nvar timingFunctionRegex = /^(cubic\\-bezier|steps)\\([^\\)]+\\)$/;\nvar validTimeUnits = ['ms', 's'];\nvar urlRegex = /^url\\([\\s\\S]+\\)$/i;\nvar variableRegex = new RegExp('^' + variableRegexStr + '$', 'i');\nvar eightValueColorRegex = /^#[0-9a-f]{8}$/i;\nvar fourValueColorRegex = /^#[0-9a-f]{4}$/i;\nvar sixValueColorRegex = /^#[0-9a-f]{6}$/i;\nvar threeValueColorRegex = /^#[0-9a-f]{3}$/i;\nvar DECIMAL_DOT = '.';\nvar MINUS_SIGN = '-';\nvar PLUS_SIGN = '+';\nvar Keywords = {\n  '^': ['inherit', 'initial', 'unset'],\n  '*-style': ['auto', 'dashed', 'dotted', 'double', 'groove', 'hidden', 'inset', 'none', 'outset', 'ridge', 'solid'],\n  '*-timing-function': ['ease', 'ease-in', 'ease-in-out', 'ease-out', 'linear', 'step-end', 'step-start'],\n  'animation-direction': ['alternate', 'alternate-reverse', 'normal', 'reverse'],\n  'animation-fill-mode': ['backwards', 'both', 'forwards', 'none'],\n  'animation-iteration-count': ['infinite'],\n  'animation-name': ['none'],\n  'animation-play-state': ['paused', 'running'],\n  'background-attachment': ['fixed', 'inherit', 'local', 'scroll'],\n  'background-clip': ['border-box', 'content-box', 'inherit', 'padding-box', 'text'],\n  'background-origin': ['border-box', 'content-box', 'inherit', 'padding-box'],\n  'background-position': ['bottom', 'center', 'left', 'right', 'top'],\n  'background-repeat': ['no-repeat', 'inherit', 'repeat', 'repeat-x', 'repeat-y', 'round', 'space'],\n  'background-size': ['auto', 'cover', 'contain'],\n  'border-collapse': ['collapse', 'inherit', 'separate'],\n  'bottom': ['auto'],\n  'clear': ['both', 'left', 'none', 'right'],\n  'color': ['transparent'],\n  'cursor': ['all-scroll', 'auto', 'col-resize', 'crosshair', 'default', 'e-resize', 'help', 'move', 'n-resize', 'ne-resize', 'no-drop', 'not-allowed', 'nw-resize', 'pointer', 'progress', 'row-resize', 's-resize', 'se-resize', 'sw-resize', 'text', 'vertical-text', 'w-resize', 'wait'],\n  'display': ['block', 'inline', 'inline-block', 'inline-table', 'list-item', 'none', 'table', 'table-caption', 'table-cell', 'table-column', 'table-column-group', 'table-footer-group', 'table-header-group', 'table-row', 'table-row-group'],\n  'float': ['left', 'none', 'right'],\n  'left': ['auto'],\n  'font': ['caption', 'icon', 'menu', 'message-box', 'small-caption', 'status-bar', 'unset'],\n  'font-size': ['large', 'larger', 'medium', 'small', 'smaller', 'x-large', 'x-small', 'xx-large', 'xx-small'],\n  'font-stretch': ['condensed', 'expanded', 'extra-condensed', 'extra-expanded', 'normal', 'semi-condensed', 'semi-expanded', 'ultra-condensed', 'ultra-expanded'],\n  'font-style': ['italic', 'normal', 'oblique'],\n  'font-variant': ['normal', 'small-caps'],\n  'font-weight': ['100', '200', '300', '400', '500', '600', '700', '800', '900', 'bold', 'bolder', 'lighter', 'normal'],\n  'line-height': ['normal'],\n  'list-style-position': ['inside', 'outside'],\n  'list-style-type': ['armenian', 'circle', 'decimal', 'decimal-leading-zero', 'disc', 'decimal|disc', // this is the default value of list-style-type, see comment in compactable.js\n  'georgian', 'lower-alpha', 'lower-greek', 'lower-latin', 'lower-roman', 'none', 'square', 'upper-alpha', 'upper-latin', 'upper-roman'],\n  'overflow': ['auto', 'hidden', 'scroll', 'visible'],\n  'position': ['absolute', 'fixed', 'relative', 'static'],\n  'right': ['auto'],\n  'text-align': ['center', 'justify', 'left', 'left|right', // this is the default value of list-style-type, see comment in compactable.js\n  'right'],\n  'text-decoration': ['line-through', 'none', 'overline', 'underline'],\n  'text-overflow': ['clip', 'ellipsis'],\n  'top': ['auto'],\n  'vertical-align': ['baseline', 'bottom', 'middle', 'sub', 'super', 'text-bottom', 'text-top', 'top'],\n  'visibility': ['collapse', 'hidden', 'visible'],\n  'white-space': ['normal', 'nowrap', 'pre'],\n  'width': ['inherit', 'initial', 'medium', 'thick', 'thin']\n};\nvar Units = ['%', 'ch', 'cm', 'em', 'ex', 'in', 'mm', 'pc', 'pt', 'px', 'rem', 'vh', 'vm', 'vmax', 'vmin', 'vw'];\n\nfunction isColor(value) {\n  return value != 'auto' && (isKeyword('color')(value) || isHexColor(value) || isColorFunction(value) || isNamedEntity(value));\n}\n\nfunction isColorFunction(value) {\n  return isRgbColor(value) || isHslColor(value);\n}\n\nfunction isDynamicUnit(value) {\n  return calcRegex.test(value);\n}\n\nfunction isFunction(value) {\n  return functionAnyRegex.test(value);\n}\n\nfunction isHexColor(value) {\n  return threeValueColorRegex.test(value) || fourValueColorRegex.test(value) || sixValueColorRegex.test(value) || eightValueColorRegex.test(value);\n}\n\nfunction isHslColor(value) {\n  return hslColorRegex.test(value);\n}\n\nfunction isIdentifier(value) {\n  return identifierRegex.test(value);\n}\n\nfunction isImage(value) {\n  return value == 'none' || value == 'inherit' || isUrl(value);\n}\n\nfunction isKeyword(propertyName) {\n  return function (value) {\n    return Keywords[propertyName].indexOf(value) > -1;\n  };\n}\n\nfunction isNamedEntity(value) {\n  return namedEntityRegex.test(value);\n}\n\nfunction isNumber(value) {\n  return scanForNumber(value) == value.length;\n}\n\nfunction isRgbColor(value) {\n  return rgbColorRegex.test(value);\n}\n\nfunction isPrefixed(value) {\n  return prefixRegex.test(value);\n}\n\nfunction isPositiveNumber(value) {\n  return isNumber(value) && parseFloat(value) >= 0;\n}\n\nfunction isVariable(value) {\n  return variableRegex.test(value);\n}\n\nfunction isTime(value) {\n  var numberUpTo = scanForNumber(value);\n  return numberUpTo == value.length && parseInt(value) === 0 || numberUpTo > -1 && validTimeUnits.indexOf(value.slice(numberUpTo + 1)) > -1;\n}\n\nfunction isTimingFunction() {\n  var isTimingFunctionKeyword = isKeyword('*-timing-function');\n  return function (value) {\n    return isTimingFunctionKeyword(value) || timingFunctionRegex.test(value);\n  };\n}\n\nfunction isUnit(validUnits, value) {\n  var numberUpTo = scanForNumber(value);\n  return numberUpTo == value.length && parseInt(value) === 0 || numberUpTo > -1 && validUnits.indexOf(value.slice(numberUpTo + 1)) > -1 || value == 'auto' || value == 'inherit';\n}\n\nfunction isUrl(value) {\n  return urlRegex.test(value);\n}\n\nfunction isZIndex(value) {\n  return value == 'auto' || isNumber(value) || isKeyword('^')(value);\n}\n\nfunction scanForNumber(value) {\n  var hasDot = false;\n  var hasSign = false;\n  var character;\n  var i, l;\n\n  for (i = 0, l = value.length; i < l; i++) {\n    character = value[i];\n\n    if (i === 0 && (character == PLUS_SIGN || character == MINUS_SIGN)) {\n      hasSign = true;\n    } else if (i > 0 && hasSign && (character == PLUS_SIGN || character == MINUS_SIGN)) {\n      return i - 1;\n    } else if (character == DECIMAL_DOT && !hasDot) {\n      hasDot = true;\n    } else if (character == DECIMAL_DOT && hasDot) {\n      return i - 1;\n    } else if (decimalRegex.test(character)) {\n      continue;\n    } else {\n      return i - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction validator(compatibility) {\n  var validUnits = Units.slice(0).filter(function (value) {\n    return !(value in compatibility.units) || compatibility.units[value] === true;\n  });\n  return {\n    colorOpacity: compatibility.colors.opacity,\n    isAnimationDirectionKeyword: isKeyword('animation-direction'),\n    isAnimationFillModeKeyword: isKeyword('animation-fill-mode'),\n    isAnimationIterationCountKeyword: isKeyword('animation-iteration-count'),\n    isAnimationNameKeyword: isKeyword('animation-name'),\n    isAnimationPlayStateKeyword: isKeyword('animation-play-state'),\n    isTimingFunction: isTimingFunction(),\n    isBackgroundAttachmentKeyword: isKeyword('background-attachment'),\n    isBackgroundClipKeyword: isKeyword('background-clip'),\n    isBackgroundOriginKeyword: isKeyword('background-origin'),\n    isBackgroundPositionKeyword: isKeyword('background-position'),\n    isBackgroundRepeatKeyword: isKeyword('background-repeat'),\n    isBackgroundSizeKeyword: isKeyword('background-size'),\n    isColor: isColor,\n    isColorFunction: isColorFunction,\n    isDynamicUnit: isDynamicUnit,\n    isFontKeyword: isKeyword('font'),\n    isFontSizeKeyword: isKeyword('font-size'),\n    isFontStretchKeyword: isKeyword('font-stretch'),\n    isFontStyleKeyword: isKeyword('font-style'),\n    isFontVariantKeyword: isKeyword('font-variant'),\n    isFontWeightKeyword: isKeyword('font-weight'),\n    isFunction: isFunction,\n    isGlobal: isKeyword('^'),\n    isHslColor: isHslColor,\n    isIdentifier: isIdentifier,\n    isImage: isImage,\n    isKeyword: isKeyword,\n    isLineHeightKeyword: isKeyword('line-height'),\n    isListStylePositionKeyword: isKeyword('list-style-position'),\n    isListStyleTypeKeyword: isKeyword('list-style-type'),\n    isNumber: isNumber,\n    isPrefixed: isPrefixed,\n    isPositiveNumber: isPositiveNumber,\n    isRgbColor: isRgbColor,\n    isStyleKeyword: isKeyword('*-style'),\n    isTime: isTime,\n    isUnit: isUnit.bind(null, validUnits),\n    isUrl: isUrl,\n    isVariable: isVariable,\n    isWidth: isKeyword('width'),\n    isZIndex: isZIndex\n  };\n}\n\nmodule.exports = validator;","map":null,"metadata":{},"sourceType":"script"}