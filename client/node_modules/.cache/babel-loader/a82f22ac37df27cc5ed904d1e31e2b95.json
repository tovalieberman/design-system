{"ast":null,"code":"import \"core-js/modules/es.array.filter\";\nimport \"core-js/modules/es.array.map\";\nimport \"core-js/modules/es.string.small\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'clsx';\nimport Link from 'rsg-components/Link';\nimport Styled from 'rsg-components/Styled';\nimport { useStyleGuideContext } from 'rsg-components/Context';\nimport { getHash } from '../../utils/handleHash';\n\nvar styles = function styles(_ref) {\n  var _isChild;\n\n  var color = _ref.color,\n      fontFamily = _ref.fontFamily,\n      fontSize = _ref.fontSize,\n      space = _ref.space,\n      mq = _ref.mq;\n  return {\n    list: {\n      margin: 0,\n      paddingLeft: space[2]\n    },\n    item: {\n      color: color.base,\n      display: 'block',\n      margin: [[space[1], 0, space[1], 0]],\n      fontFamily: fontFamily.base,\n      fontSize: fontSize.base,\n      listStyle: 'none',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    },\n    isChild: (_isChild = {}, _isChild[mq.small] = {\n      display: 'inline-block',\n      margin: [[0, space[1], 0, 0]]\n    }, _isChild),\n    heading: {\n      color: color.base,\n      marginTop: space[1],\n      fontFamily: fontFamily.base,\n      fontWeight: 'bold'\n    },\n    isSelected: {\n      fontWeight: 'bold'\n    }\n  };\n};\n\nexport function ComponentsListRenderer(_ref2) {\n  var classes = _ref2.classes,\n      items = _ref2.items;\n\n  var _useStyleGuideContext = useStyleGuideContext(),\n      pagePerSection = _useStyleGuideContext.config.pagePerSection;\n\n  var visibleItems = items.filter(function (item) {\n    return item.visibleName;\n  });\n\n  if (!visibleItems.length) {\n    return null;\n  } // Match selected component in both basic routing and pagePerSection routing.\n\n\n  var _window$location = window.location,\n      hash = _window$location.hash,\n      pathname = _window$location.pathname;\n  var windowHash = pathname + (pagePerSection ? hash : getHash(hash));\n  return React.createElement(\"ul\", {\n    className: classes.list\n  }, visibleItems.map(function (_ref3) {\n    var _cx;\n\n    var heading = _ref3.heading,\n        visibleName = _ref3.visibleName,\n        href = _ref3.href,\n        content = _ref3.content,\n        shouldOpenInNewTab = _ref3.shouldOpenInNewTab;\n    var isItemSelected = windowHash === href;\n    return React.createElement(\"li\", {\n      className: cx(classes.item, (_cx = {}, _cx[classes.isChild] = (!content || !content.props.items.length) && !shouldOpenInNewTab, _cx[classes.isSelected] = isItemSelected, _cx)),\n      key: href\n    }, React.createElement(Link, {\n      className: cx(heading && classes.heading),\n      href: href,\n      target: shouldOpenInNewTab ? '_blank' : undefined\n    }, visibleName), content);\n  }));\n}\nComponentsListRenderer.propTypes = {\n  items: PropTypes.array.isRequired,\n  classes: PropTypes.object.isRequired\n};\nexport default Styled(styles)(ComponentsListRenderer);","map":null,"metadata":{},"sourceType":"module"}