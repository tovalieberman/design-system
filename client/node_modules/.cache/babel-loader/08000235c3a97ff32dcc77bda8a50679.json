{"ast":null,"code":"// This extractor is used in level 2 optimizations\n// IMPORTANT: Mind Token class and this code is not related!\n// Properties will be tokenized in one step, see #429\nvar Token = require('../../tokenizer/token');\n\nvar serializeRules = require('../../writer/one-time').rules;\n\nvar serializeValue = require('../../writer/one-time').value;\n\nfunction extractProperties(token) {\n  var properties = [];\n  var inSpecificSelector;\n  var property;\n  var name;\n  var value;\n  var i, l;\n\n  if (token[0] == Token.RULE) {\n    inSpecificSelector = !/[\\.\\+>~]/.test(serializeRules(token[1]));\n\n    for (i = 0, l = token[2].length; i < l; i++) {\n      property = token[2][i];\n      if (property[0] != Token.PROPERTY) continue;\n      name = property[1][1];\n      if (name.length === 0) continue;\n      if (name.indexOf('--') === 0) continue;\n      value = serializeValue(property, i);\n      properties.push([name, value, findNameRoot(name), token[2][i], name + ':' + value, token[1], inSpecificSelector]);\n    }\n  } else if (token[0] == Token.NESTED_BLOCK) {\n    for (i = 0, l = token[2].length; i < l; i++) {\n      properties = properties.concat(extractProperties(token[2][i]));\n    }\n  }\n\n  return properties;\n}\n\nfunction findNameRoot(name) {\n  if (name == 'list-style') return name;\n  if (name.indexOf('-radius') > 0) return 'border-radius';\n  if (name == 'border-collapse' || name == 'border-spacing' || name == 'border-image') return name;\n  if (name.indexOf('border-') === 0 && /^border\\-\\w+\\-\\w+$/.test(name)) return name.match(/border\\-\\w+/)[0];\n  if (name.indexOf('border-') === 0 && /^border\\-\\w+$/.test(name)) return 'border';\n  if (name.indexOf('text-') === 0) return name;\n  if (name == '-chrome-') return name;\n  return name.replace(/^\\-\\w+\\-/, '').match(/([a-zA-Z]+)/)[0].toLowerCase();\n}\n\nmodule.exports = extractProperties;","map":null,"metadata":{},"sourceType":"script"}