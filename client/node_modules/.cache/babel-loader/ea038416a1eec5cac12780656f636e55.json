{"ast":null,"code":"// TODO: it'd be great to merge it with the other canReorder functionality\nvar rulesOverlap = require('./rules-overlap');\n\nvar specificitiesOverlap = require('./specificities-overlap');\n\nvar FLEX_PROPERTIES = /align\\-items|box\\-align|box\\-pack|flex|justify/;\nvar BORDER_PROPERTIES = /^border\\-(top|right|bottom|left|color|style|width|radius)/;\n\nfunction canReorder(left, right, cache) {\n  for (var i = right.length - 1; i >= 0; i--) {\n    for (var j = left.length - 1; j >= 0; j--) {\n      if (!canReorderSingle(left[j], right[i], cache)) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction canReorderSingle(left, right, cache) {\n  var leftName = left[0];\n  var leftValue = left[1];\n  var leftNameRoot = left[2];\n  var leftSelector = left[5];\n  var leftInSpecificSelector = left[6];\n  var rightName = right[0];\n  var rightValue = right[1];\n  var rightNameRoot = right[2];\n  var rightSelector = right[5];\n  var rightInSpecificSelector = right[6];\n  if (leftName == 'font' && rightName == 'line-height' || rightName == 'font' && leftName == 'line-height') return false;\n  if (FLEX_PROPERTIES.test(leftName) && FLEX_PROPERTIES.test(rightName)) return false;\n  if (leftNameRoot == rightNameRoot && unprefixed(leftName) == unprefixed(rightName) && vendorPrefixed(leftName) ^ vendorPrefixed(rightName)) return false;\n  if (leftNameRoot == 'border' && BORDER_PROPERTIES.test(rightNameRoot) && (leftName == 'border' || leftName == rightNameRoot || leftValue != rightValue && sameBorderComponent(leftName, rightName))) return false;\n  if (rightNameRoot == 'border' && BORDER_PROPERTIES.test(leftNameRoot) && (rightName == 'border' || rightName == leftNameRoot || leftValue != rightValue && sameBorderComponent(leftName, rightName))) return false;\n  if (leftNameRoot == 'border' && rightNameRoot == 'border' && leftName != rightName && (isSideBorder(leftName) && isStyleBorder(rightName) || isStyleBorder(leftName) && isSideBorder(rightName))) return false;\n  if (leftNameRoot != rightNameRoot) return true;\n  if (leftName == rightName && leftNameRoot == rightNameRoot && (leftValue == rightValue || withDifferentVendorPrefix(leftValue, rightValue))) return true;\n  if (leftName != rightName && leftNameRoot == rightNameRoot && leftName != leftNameRoot && rightName != rightNameRoot) return true;\n  if (leftName != rightName && leftNameRoot == rightNameRoot && leftValue == rightValue) return true;\n  if (rightInSpecificSelector && leftInSpecificSelector && !inheritable(leftNameRoot) && !inheritable(rightNameRoot) && !rulesOverlap(rightSelector, leftSelector, false)) return true;\n  if (!specificitiesOverlap(leftSelector, rightSelector, cache)) return true;\n  return false;\n}\n\nfunction vendorPrefixed(name) {\n  return /^\\-(?:moz|webkit|ms|o)\\-/.test(name);\n}\n\nfunction unprefixed(name) {\n  return name.replace(/^\\-(?:moz|webkit|ms|o)\\-/, '');\n}\n\nfunction sameBorderComponent(name1, name2) {\n  return name1.split('-').pop() == name2.split('-').pop();\n}\n\nfunction isSideBorder(name) {\n  return name == 'border-top' || name == 'border-right' || name == 'border-bottom' || name == 'border-left';\n}\n\nfunction isStyleBorder(name) {\n  return name == 'border-color' || name == 'border-style' || name == 'border-width';\n}\n\nfunction withDifferentVendorPrefix(value1, value2) {\n  return vendorPrefixed(value1) && vendorPrefixed(value2) && value1.split('-')[1] != value2.split('-')[2];\n}\n\nfunction inheritable(name) {\n  // According to http://www.w3.org/TR/CSS21/propidx.html\n  // Others will be catched by other, preceeding rules\n  return name == 'font' || name == 'line-height' || name == 'list-style';\n}\n\nmodule.exports = {\n  canReorder: canReorder,\n  canReorderSingle: canReorderSingle\n};","map":null,"metadata":{},"sourceType":"script"}