{"ast":null,"code":"import \"core-js/modules/es.array.map\";\nimport React, { Children, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'clsx';\nimport Styled from 'rsg-components/Styled';\n\nvar styles = function styles(_ref) {\n  var space = _ref.space,\n      color = _ref.color,\n      fontFamily = _ref.fontFamily;\n  return {\n    list: {\n      marginTop: 0,\n      marginBottom: space[2],\n      paddingLeft: space[3],\n      fontSize: 'inherit'\n    },\n    ordered: {\n      listStyleType: 'decimal'\n    },\n    li: {\n      color: color.base,\n      fontFamily: fontFamily.base,\n      fontSize: 'inherit',\n      lineHeight: 1.5,\n      listStyleType: 'inherit'\n    }\n  };\n};\n\nexport function ListRenderer(_ref2) {\n  var classes = _ref2.classes,\n      ordered = _ref2.ordered,\n      children = _ref2.children;\n  var Tag = ordered ? 'ol' : 'ul';\n  var classNames = cx(classes.list, ordered && classes.ordered);\n  return React.createElement(Tag, {\n    className: classNames\n  }, Children.map(children, function (li) {\n    return cloneElement(li, {\n      className: classes.li\n    });\n  }));\n}\nListRenderer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  ordered: PropTypes.bool,\n  children: PropTypes.node.isRequired\n};\nListRenderer.defaultProps = {\n  ordered: false\n};\nexport default Styled(styles)(ListRenderer);","map":null,"metadata":{},"sourceType":"module"}