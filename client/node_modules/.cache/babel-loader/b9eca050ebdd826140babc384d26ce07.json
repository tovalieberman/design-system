{"ast":null,"code":"import \"core-js/modules/es.string.match\";\nimport \"core-js/modules/es.string.trim\";\nimport { transform } from 'buble';\nimport transpileImports from './transpileImports';\n\nvar compile = function compile(code, config) {\n  return transform(code, config).code;\n};\n\nvar startsWithJsx = function startsWithJsx(code) {\n  return !!code.trim().match(/^</);\n};\n\nvar wrapCodeInFragment = function wrapCodeInFragment(code) {\n  return \"<React.Fragment>\" + code + \"</React.Fragment>;\";\n};\n/*\n * 1. Wrap code in React Fragment if it starts with JSX element\n * 2. Transform import statements into require() calls\n * 3. Compile code using Buble\n */\n\n\nexport default function compileCode(code, compilerConfig, onError) {\n  try {\n    var wrappedCode = startsWithJsx(code) ? wrapCodeInFragment(code) : code;\n    var compiledCode = compile(wrappedCode, compilerConfig);\n    return transpileImports(compiledCode);\n  } catch (err) {\n    if (onError) {\n      onError(err);\n    }\n  }\n\n  return '';\n}","map":null,"metadata":{},"sourceType":"module"}