{"ast":null,"code":"import \"core-js/modules/es.string.small\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Logo from '../Logo';\nimport Markdown from 'rsg-components/Markdown';\nimport Styled from 'rsg-components/Styled';\nimport cx from 'clsx';\nimport Ribbon from 'rsg-components/Ribbon';\nimport Version from 'rsg-components/Version';\n\nvar styles = function styles(_ref) {\n  var _hasSidebar, _content, _sidebar;\n\n  var color = _ref.color,\n      fontFamily = _ref.fontFamily,\n      fontSize = _ref.fontSize,\n      sidebarWidth = _ref.sidebarWidth,\n      mq = _ref.mq,\n      space = _ref.space,\n      maxWidth = _ref.maxWidth;\n  return {\n    root: {\n      minHeight: '100vh',\n      backgroundColor: color.baseBackground\n    },\n    hasSidebar: (_hasSidebar = {\n      paddingLeft: sidebarWidth\n    }, _hasSidebar[mq.small] = {\n      paddingLeft: 0\n    }, _hasSidebar),\n    content: (_content = {\n      maxWidth: maxWidth,\n      padding: [[space[2], space[4]]],\n      margin: [[0, 'auto']]\n    }, _content[mq.small] = {\n      padding: space[2]\n    }, _content.display = 'block', _content),\n    sidebar: (_sidebar = {\n      backgroundColor: color.sidebarBackground,\n      border: [[color.border, 'solid']],\n      borderWidth: [[0, 1, 0, 0]],\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      bottom: 0,\n      width: sidebarWidth,\n      overflow: 'auto',\n      WebkitOverflowScrolling: 'touch'\n    }, _sidebar[mq.small] = {\n      position: 'static',\n      width: 'auto',\n      borderWidth: [[1, 0, 0, 0]],\n      paddingBottom: space[0]\n    }, _sidebar),\n    logo: {\n      padding: space[2],\n      borderBottom: [[1, color.border, 'solid']]\n    },\n    footer: {\n      display: 'block',\n      color: color.light,\n      fontFamily: fontFamily.base,\n      fontSize: fontSize.small\n    }\n  };\n};\n\nexport function StyleGuideRenderer(_ref2) {\n  var classes = _ref2.classes,\n      title = _ref2.title,\n      version = _ref2.version,\n      homepageUrl = _ref2.homepageUrl,\n      children = _ref2.children,\n      toc = _ref2.toc,\n      hasSidebar = _ref2.hasSidebar;\n  return React.createElement(\"div\", {\n    className: cx(classes.root, hasSidebar && classes.hasSidebar)\n  }, React.createElement(\"main\", {\n    className: classes.content\n  }, children, React.createElement(\"footer\", {\n    className: classes.footer\n  }, React.createElement(Markdown, {\n    text: \"Created with [React Styleguidist](\" + homepageUrl + \")\"\n  }))), hasSidebar && React.createElement(\"div\", {\n    className: classes.sidebar,\n    \"data-testid\": \"sidebar\"\n  }, React.createElement(\"header\", {\n    className: classes.logo\n  }, React.createElement(Logo, null, title), version && React.createElement(Version, null, version)), toc), React.createElement(Ribbon, null));\n}\nStyleGuideRenderer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n  version: PropTypes.string,\n  homepageUrl: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  toc: PropTypes.node.isRequired,\n  hasSidebar: PropTypes.bool\n};\nexport default Styled(styles)(StyleGuideRenderer);","map":null,"metadata":{},"sourceType":"module"}