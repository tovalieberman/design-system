{"ast":null,"code":"import \"core-js/modules/es.string.match\";\nimport { walk } from 'estree-walker';\nimport rewriteImports from './rewriteImports';\nimport getAst from './getAst';\n\nvar hasImports = function hasImports(code) {\n  return !!code.match(/import[\\S\\s]+?['\"]([^'\"]+)['\"];?/m);\n};\n/**\n * Replace ECMAScript imports with require() calls\n */\n\n\nexport default function transpileImports(code) {\n  // Don't do anything when the code has nothing that looks like an import\n  if (!hasImports(code)) {\n    return code;\n  } // Ignore errors, they should be caught by Buble\n\n\n  var ast = getAst(code);\n\n  if (!ast) {\n    return code;\n  }\n\n  var offset = 0;\n  walk(ast, {\n    // import foo from 'foo'\n    // import 'foo'\n    enter: function enter(node) {\n      if (node.type === 'ImportDeclaration' && node.source) {\n        var start = node.start + offset;\n        var end = node.end + offset;\n        var statement = code.substring(start, end);\n        var transpiledStatement = rewriteImports(statement);\n        code = code.substring(0, start) + transpiledStatement + code.substring(end);\n        offset += transpiledStatement.length - statement.length;\n      }\n    }\n  });\n  return code;\n}","map":null,"metadata":{},"sourceType":"module"}