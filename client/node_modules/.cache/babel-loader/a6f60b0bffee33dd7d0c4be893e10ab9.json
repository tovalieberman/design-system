{"ast":null,"code":"\"use strict\";\n\nvar constants = require(\"./constants\");\n\nfunction formatAuth(urlObj, options) {\n  if (urlObj.auth && !options.removeAuth && (urlObj.extra.relation.maximumHost || options.output === constants.ABSOLUTE)) {\n    return urlObj.auth + \"@\";\n  }\n\n  return \"\";\n}\n\nfunction formatHash(urlObj, options) {\n  return urlObj.hash ? urlObj.hash : \"\";\n}\n\nfunction formatHost(urlObj, options) {\n  if (urlObj.host.full && (urlObj.extra.relation.maximumAuth || options.output === constants.ABSOLUTE)) {\n    return urlObj.host.full;\n  }\n\n  return \"\";\n}\n\nfunction formatPath(urlObj, options) {\n  var str = \"\";\n  var absolutePath = urlObj.path.absolute.string;\n  var relativePath = urlObj.path.relative.string;\n  var resource = showResource(urlObj, options);\n\n  if (urlObj.extra.relation.maximumHost || options.output === constants.ABSOLUTE || options.output === constants.ROOT_RELATIVE) {\n    str = absolutePath;\n  } else if (relativePath.length <= absolutePath.length && options.output === constants.SHORTEST || options.output === constants.PATH_RELATIVE) {\n    str = relativePath;\n\n    if (str === \"\") {\n      var query = showQuery(urlObj, options) && !!getQuery(urlObj, options);\n\n      if (urlObj.extra.relation.maximumPath && !resource) {\n        str = \"./\";\n      } else if (urlObj.extra.relation.overridesQuery && !resource && !query) {\n        str = \"./\";\n      }\n    }\n  } else {\n    str = absolutePath;\n  }\n\n  if (str === \"/\" && !resource && options.removeRootTrailingSlash && (!urlObj.extra.relation.minimumPort || options.output === constants.ABSOLUTE)) {\n    str = \"\";\n  }\n\n  return str;\n}\n\nfunction formatPort(urlObj, options) {\n  if (urlObj.port && !urlObj.extra.portIsDefault && urlObj.extra.relation.maximumHost) {\n    return \":\" + urlObj.port;\n  }\n\n  return \"\";\n}\n\nfunction formatQuery(urlObj, options) {\n  return showQuery(urlObj, options) ? getQuery(urlObj, options) : \"\";\n}\n\nfunction formatResource(urlObj, options) {\n  return showResource(urlObj, options) ? urlObj.resource : \"\";\n}\n\nfunction formatScheme(urlObj, options) {\n  var str = \"\";\n\n  if (urlObj.extra.relation.maximumHost || options.output === constants.ABSOLUTE) {\n    if (!urlObj.extra.relation.minimumScheme || !options.schemeRelative || options.output === constants.ABSOLUTE) {\n      str += urlObj.scheme + \"://\";\n    } else {\n      str += \"//\";\n    }\n  }\n\n  return str;\n}\n\nfunction formatUrl(urlObj, options) {\n  var url = \"\";\n  url += formatScheme(urlObj, options);\n  url += formatAuth(urlObj, options);\n  url += formatHost(urlObj, options);\n  url += formatPort(urlObj, options);\n  url += formatPath(urlObj, options);\n  url += formatResource(urlObj, options);\n  url += formatQuery(urlObj, options);\n  url += formatHash(urlObj, options);\n  return url;\n}\n\nfunction getQuery(urlObj, options) {\n  var stripQuery = options.removeEmptyQueries && urlObj.extra.relation.minimumPort;\n  return urlObj.query.string[stripQuery ? \"stripped\" : \"full\"];\n}\n\nfunction showQuery(urlObj, options) {\n  return !urlObj.extra.relation.minimumQuery || options.output === constants.ABSOLUTE || options.output === constants.ROOT_RELATIVE;\n}\n\nfunction showResource(urlObj, options) {\n  var removeIndex = options.removeDirectoryIndexes && urlObj.extra.resourceIsIndex;\n  var removeMatchingResource = urlObj.extra.relation.minimumResource && options.output !== constants.ABSOLUTE && options.output !== constants.ROOT_RELATIVE;\n  return !!urlObj.resource && !removeMatchingResource && !removeIndex;\n}\n\nmodule.exports = formatUrl;","map":null,"metadata":{},"sourceType":"script"}