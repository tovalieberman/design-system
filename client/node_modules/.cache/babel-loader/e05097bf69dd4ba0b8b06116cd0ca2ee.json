{"ast":null,"code":"import \"core-js/modules/es.array.concat\";\nimport \"core-js/modules/es.object.assign\";\nimport \"core-js/modules/es.string.link\";\nimport \"core-js/modules/es.string.small\";\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Styled from 'rsg-components/Styled';\nimport SimpleEditor from 'react-simple-code-editor';\nimport Prism from 'prismjs/components/prism-core';\nimport 'prismjs/components/prism-clike';\nimport 'prismjs/components/prism-markup';\nimport 'prismjs/components/prism-javascript';\nimport 'prismjs/components/prism-jsx';\nimport { space } from '../../styles/theme';\nimport prismTheme from '../../styles/prismTheme';\n\nvar highlight = function highlight(code) {\n  return Prism.highlight(code, Prism.languages.jsx, 'jsx');\n};\n\nvar styles = function styles(_ref) {\n  var fontFamily = _ref.fontFamily,\n      fontSize = _ref.fontSize,\n      color = _ref.color,\n      borderRadius = _ref.borderRadius;\n  return {\n    root: Object.assign({\n      fontFamily: fontFamily.monospace,\n      fontSize: fontSize.small,\n      background: color.codeBackground,\n      borderRadius: borderRadius,\n      '& textarea': {\n        isolate: false,\n        transition: 'all ease-in-out .1s',\n        // important to override inline styles in react-simple-code-editor\n        border: \"1px \" + color.border + \" solid !important\",\n        borderRadius: borderRadius\n      },\n      '& textarea:focus': {\n        isolate: false,\n        outline: 0,\n        borderColor: color.link + \" !important\",\n        boxShadow: [[0, 0, 0, 2, color.focus]]\n      }\n    }, prismTheme({\n      color: color\n    }))\n  };\n};\n\nexport var Editor =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Editor, _Component);\n\n  function Editor() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      code: _this.props.code,\n      prevCode: _this.props.code\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (code) {\n      _this.setState({\n        code: code\n      });\n\n      _this.props.onChange(code);\n    });\n\n    return _this;\n  }\n\n  Editor.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    var code = nextProps.code;\n\n    if (prevState.prevCode !== code) {\n      return {\n        prevCode: code,\n        code: code\n      };\n    }\n\n    return null;\n  };\n\n  var _proto = Editor.prototype;\n\n  _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {\n    return nextState.code !== this.state.code;\n  };\n\n  _proto.render = function render() {\n    return React.createElement(SimpleEditor, {\n      className: this.props.classes.root,\n      value: this.state.code,\n      onValueChange: this.handleChange,\n      highlight: highlight // Padding should be passed via a prop (not CSS) for a proper\n      // cursor position calculation\n      ,\n      padding: space[2]\n    });\n  };\n\n  return Editor;\n}(Component);\n\n_defineProperty(Editor, \"propTypes\", {\n  code: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired\n});\n\nexport default Styled(styles)(Editor);","map":null,"metadata":{},"sourceType":"module"}