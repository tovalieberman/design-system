{"ast":null,"code":"import _defineProperty from\"/Users/tliebe1/Code/design-system/glic-design-system/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}var incrementCountType='INCREMENT_COUNT';var decrementCountType='DECREMENT_COUNT';var initialState={count:0};export var actionCreators={increment:function increment(){return{type:incrementCountType};},decrement:function decrement(){return{type:decrementCountType};}};export var reducer=function reducer(state,action){state=state||initialState;if(action.type===incrementCountType){return _objectSpread({},state,{count:state.count+1});}if(action.type===decrementCountType){return _objectSpread({},state,{count:state.count-1});}return state;};","map":{"version":3,"sources":["/Users/tliebe1/Code/design-system/glic-design-system/client/src/store/Counter.js"],"names":["incrementCountType","decrementCountType","initialState","count","actionCreators","increment","type","decrement","reducer","state","action"],"mappings":"g8BAAA,GAAMA,CAAAA,kBAAkB,CAAG,iBAA3B,CACA,GAAMC,CAAAA,kBAAkB,CAAG,iBAA3B,CACA,GAAMC,CAAAA,YAAY,CAAG,CAAEC,KAAK,CAAE,CAAT,CAArB,CAEA,MAAO,IAAMC,CAAAA,cAAc,CAAG,CAC5BC,SAAS,CAAE,2BAAO,CAAEC,IAAI,CAAEN,kBAAR,CAAP,EADiB,CAE5BO,SAAS,CAAE,2BAAO,CAAED,IAAI,CAAEL,kBAAR,CAAP,EAFiB,CAAvB,CAKP,MAAO,IAAMO,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAQC,MAAR,CAAmB,CACxCD,KAAK,CAAGA,KAAK,EAAIP,YAAjB,CAEA,GAAIQ,MAAM,CAACJ,IAAP,GAAgBN,kBAApB,CAAwC,CACtC,wBAAYS,KAAZ,EAAmBN,KAAK,CAAEM,KAAK,CAACN,KAAN,CAAc,CAAxC,GACD,CAED,GAAIO,MAAM,CAACJ,IAAP,GAAgBL,kBAApB,CAAwC,CACtC,wBAAYQ,KAAZ,EAAmBN,KAAK,CAAEM,KAAK,CAACN,KAAN,CAAc,CAAxC,GACD,CAED,MAAOM,CAAAA,KAAP,CACD,CAZM","sourcesContent":["const incrementCountType = 'INCREMENT_COUNT';\nconst decrementCountType = 'DECREMENT_COUNT';\nconst initialState = { count: 0 };\n\nexport const actionCreators = {\n  increment: () => ({ type: incrementCountType }),\n  decrement: () => ({ type: decrementCountType })\n};\n\nexport const reducer = (state, action) => {\n  state = state || initialState;\n\n  if (action.type === incrementCountType) {\n    return { ...state, count: state.count + 1 };\n  }\n\n  if (action.type === decrementCountType) {\n    return { ...state, count: state.count - 1 };\n  }\n\n  return state;\n};\n"]},"metadata":{},"sourceType":"module"}