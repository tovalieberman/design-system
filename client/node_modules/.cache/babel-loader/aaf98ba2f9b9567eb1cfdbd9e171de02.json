{"ast":null,"code":"// Generated by CoffeeScript 1.9.3\nvar _Declaration;\n\nmodule.exports = _Declaration = function () {\n  var self;\n  self = _Declaration;\n  _Declaration.importantClauseRx = /(\\s\\!important)$/;\n\n  _Declaration.setOnto = function (declarations, prop, val) {\n    var dec;\n\n    if (!(dec = declarations[prop])) {\n      return declarations[prop] = new this(prop, val);\n    } else {\n      return dec.set(val);\n    }\n  };\n\n  _Declaration.sanitizeValue = function (val) {\n    return String(val).trim().replace(/[\\s]+/g, ' ');\n  };\n\n  _Declaration.inheritAllowed = false;\n\n  function _Declaration(prop1, val) {\n    this.prop = prop1;\n    this.important = false;\n    this.set(val);\n  }\n\n  _Declaration.prototype.get = function () {\n    return this._get();\n  };\n\n  _Declaration.prototype._get = function () {\n    return this.val;\n  };\n\n  _Declaration.prototype._pickImportantClause = function (val) {\n    if (self.importantClauseRx.test(String(val))) {\n      this.important = true;\n      return val.replace(self.importantClauseRx, '');\n    } else {\n      this.important = false;\n      return val;\n    }\n  };\n\n  _Declaration.prototype.set = function (val) {\n    val = self.sanitizeValue(val);\n    val = this._pickImportantClause(val);\n    val = val.trim();\n\n    if (this._handleNullOrInherit(val)) {\n      return this;\n    }\n\n    this._set(val);\n\n    return this;\n  };\n\n  _Declaration.prototype._set = function (val) {\n    return this.val = val;\n  };\n\n  _Declaration.prototype._handleNullOrInherit = function (val) {\n    if (val === '') {\n      this.val = '';\n      return true;\n    }\n\n    if (val === 'inherit') {\n      if (this.constructor.inheritAllowed) {\n        this.val = 'inherit';\n      } else {\n        throw Error(\"Inherit is not allowed for `\" + this.prop + \"`\");\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return _Declaration;\n}();","map":null,"metadata":{},"sourceType":"script"}