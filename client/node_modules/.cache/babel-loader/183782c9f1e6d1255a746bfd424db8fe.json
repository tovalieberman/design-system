{"ast":null,"code":"// @ts-nocheck\n'use strict';\n\nvar PrettyError = require('pretty-error');\n\nvar prettyError = new PrettyError();\nprettyError.withoutColors();\nprettyError.skipPackage('html-plugin-evaluation');\nprettyError.skipNodeFiles();\nprettyError.skip(function (traceLine) {\n  return traceLine.path === 'html-plugin-evaluation';\n});\n\nmodule.exports = function (err, context) {\n  return {\n    toHtml: function toHtml() {\n      return 'Html Webpack Plugin:\\n<pre>\\n' + this.toString() + '</pre>';\n    },\n    toJsonHtml: function toJsonHtml() {\n      return JSON.stringify(this.toHtml());\n    },\n    toString: function toString() {\n      try {\n        return prettyError.render(err).replace(/webpack:\\/\\/\\/\\./g, context);\n      } catch (e) {\n        // This can sometimes fail. We don't know why, but returning the\n        // original error is better than returning the error thrown by\n        // pretty-error.\n        return err;\n      }\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"script"}