{"ast":null,"code":"// Generated by CoffeeScript 1.9.3\nvar MixedDeclarationSet, StyleSheet, Styles, terminalWidth;\nStyleSheet = require('./styles/StyleSheet');\nMixedDeclarationSet = require('./styles/rule/MixedDeclarationSet');\nterminalWidth = require('../tools').getCols();\n\nmodule.exports = Styles = function () {\n  var self;\n  self = Styles;\n  Styles.defaultRules = {\n    '*': {\n      display: 'inline'\n    },\n    'body': {\n      background: 'none',\n      color: 'white',\n      display: 'block',\n      width: terminalWidth + ' !important'\n    }\n  };\n\n  function Styles() {\n    this._defaultStyles = new StyleSheet();\n    this._userStyles = new StyleSheet();\n\n    this._setDefaultStyles();\n  }\n\n  Styles.prototype._setDefaultStyles = function () {\n    this._defaultStyles.setRule(self.defaultRules);\n  };\n\n  Styles.prototype.setRule = function (selector, rules) {\n    this._userStyles.setRule.apply(this._userStyles, arguments);\n\n    return this;\n  };\n\n  Styles.prototype.getStyleFor = function (el) {\n    var styles;\n    styles = el.styles;\n\n    if (styles == null) {\n      el.styles = styles = this._getComputedStyleFor(el);\n    }\n\n    return styles;\n  };\n\n  Styles.prototype._getRawStyleFor = function (el) {\n    var def, user;\n    def = this._defaultStyles.getRulesFor(el);\n    user = this._userStyles.getRulesFor(el);\n    return MixedDeclarationSet.mix(def, user).toObject();\n  };\n\n  Styles.prototype._getComputedStyleFor = function (el) {\n    var decs, parent, prop, ref, val;\n    decs = {};\n    parent = el.parent;\n    ref = this._getRawStyleFor(el);\n\n    for (prop in ref) {\n      val = ref[prop];\n\n      if (val !== 'inherit') {\n        decs[prop] = val;\n      } else {\n        throw Error(\"Inherited styles are not supported yet.\");\n      }\n    }\n\n    return decs;\n  };\n\n  return Styles;\n}();","map":null,"metadata":{},"sourceType":"script"}