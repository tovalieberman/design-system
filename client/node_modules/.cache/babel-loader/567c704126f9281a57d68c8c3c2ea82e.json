{"ast":null,"code":"import \"core-js/modules/es.object.assign\";\nimport \"core-js/modules/es.string.small\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'clsx';\nimport Styled from 'rsg-components/Styled';\nimport prismTheme from '../../../styles/prismTheme';\n\nvar styles = function styles(_ref) {\n  var space = _ref.space,\n      color = _ref.color,\n      fontSize = _ref.fontSize,\n      fontFamily = _ref.fontFamily,\n      borderRadius = _ref.borderRadius;\n  return {\n    pre: Object.assign({\n      fontFamily: fontFamily.monospace,\n      fontSize: fontSize.small,\n      lineHeight: 1.5,\n      color: color.base,\n      whiteSpace: 'pre-wrap',\n      wordWrap: 'normal',\n      tabSize: 2,\n      hyphens: 'none',\n      backgroundColor: color.codeBackground,\n      padding: [[space[1], space[2]]],\n      border: [[1, color.codeBackground, 'solid']],\n      borderRadius: borderRadius,\n      marginTop: 0,\n      marginBottom: space[2]\n    }, prismTheme({\n      color: color\n    }))\n  };\n};\n\nexport function PreRenderer(_ref2) {\n  var classes = _ref2.classes,\n      className = _ref2.className,\n      children = _ref2.children;\n  var classNames = cx(className, classes.pre);\n  var isHighlighted = className && className.indexOf('lang-') !== -1;\n\n  if (isHighlighted) {\n    return React.createElement(\"pre\", {\n      className: classNames,\n      dangerouslySetInnerHTML: {\n        __html: children\n      }\n    });\n  }\n\n  return React.createElement(\"pre\", {\n    className: classNames\n  }, children);\n}\nPreRenderer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired\n};\nexport default Styled(styles)(PreRenderer);","map":null,"metadata":{},"sourceType":"module"}