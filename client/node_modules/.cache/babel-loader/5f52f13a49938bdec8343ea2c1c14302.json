{"ast":null,"code":"\"use strict\";\n\nvar objUtils = require(\"./util/object\");\n\nfunction getOptions(options, defaults) {\n  if (objUtils.isPlainObject(options)) {\n    var newOptions = {};\n\n    for (var i in defaults) {\n      if (defaults.hasOwnProperty(i)) {\n        if (options[i] !== undefined) {\n          newOptions[i] = mergeOption(options[i], defaults[i]);\n        } else {\n          newOptions[i] = defaults[i];\n        }\n      }\n    }\n\n    return newOptions;\n  } else {\n    return defaults;\n  }\n}\n\nfunction mergeOption(newValues, defaultValues) {\n  if (defaultValues instanceof Object && newValues instanceof Object) {\n    if (defaultValues instanceof Array && newValues instanceof Array) {\n      return defaultValues.concat(newValues);\n    } else {\n      return objUtils.shallowMerge(newValues, defaultValues);\n    }\n  }\n\n  return newValues;\n}\n\nmodule.exports = getOptions;","map":null,"metadata":{},"sourceType":"script"}