{"ast":null,"code":"import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.function.name\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Styled from 'rsg-components/Styled';\nimport SectionHeading from 'rsg-components/SectionHeading';\nimport Markdown from 'rsg-components/Markdown';\n\nvar styles = function styles(_ref) {\n  var space = _ref.space;\n  return {\n    root: {\n      marginBottom: space[4]\n    }\n  };\n};\n\nexport function SectionRenderer(allProps) {\n  var classes = allProps.classes,\n      name = allProps.name,\n      slug = allProps.slug,\n      content = allProps.content,\n      components = allProps.components,\n      sections = allProps.sections,\n      depth = allProps.depth,\n      description = allProps.description,\n      pagePerSection = allProps.pagePerSection;\n  return React.createElement(\"section\", {\n    className: classes.root,\n    \"data-testid\": \"section-\" + slug\n  }, name && React.createElement(SectionHeading, {\n    depth: depth,\n    id: slug,\n    slotName: \"sectionToolbar\",\n    pagePerSection: pagePerSection,\n    slotProps: allProps\n  }, name), description && React.createElement(Markdown, {\n    text: description\n  }), content, sections, components);\n}\nSectionRenderer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  name: PropTypes.string,\n  description: PropTypes.string,\n  slug: PropTypes.string.isRequired,\n  content: PropTypes.node,\n  components: PropTypes.node,\n  sections: PropTypes.node,\n  isolated: PropTypes.bool,\n  depth: PropTypes.number.isRequired,\n  pagePerSection: PropTypes.bool\n};\nexport default Styled(styles)(SectionRenderer);","map":null,"metadata":{},"sourceType":"module"}